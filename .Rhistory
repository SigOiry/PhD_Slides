geom_col()+
scale_fill_ucscgb() +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
install.packages("paletteer")
library(paletteer)
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_ucscgb() +
scale_fill_paletteer_d("fishualize::Scarus_quoyi")
labs(x = "Year", y = "Number of Documents") +
library(paletteer)
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_ucscgb() +
scale_fill_paletteer_d("fishualize::Scarus_quoyi")
labs(x = "Year", y = "Number of Documents") +
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_paletteer_d("fishualize::Scarus_quoyi")+
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_paletteer_d("dutchmasters::milkmaid")+
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
packagename::palettenam
packagename::palettename
palettes_dynamic_names
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_paletteer_d("cartography::multi.pal")+
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_paletteer_d("multi.pal")+
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_paletteer_d("cartography::multi.pal")+
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
palettes_dynamic
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_paletteer_d("cartography$multi.pal")+
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_paletteer_c("cartography::multi.pal")+
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
# scale_fill_paletteer_c("cartography::multi.pal")+
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count))+
geom_col()+
# scale_fill_paletteer_c("cartography::multi.pal")+
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
my_colors <- createPalette(24, seedcolors = c("#4477AA", "#CC6677"))
df <- read.csv("Data/Intro/trend_paper_coastalRS.csv")%>%
rename(Count = `Document.Count`, Year = `Publication.Year`, Type = `Document.Type`)
year_breaks <- seq(min(df$Year), max(df$Year), by = 10)
# Match color palette to document types
type_levels <- unique(df$Type)
n_types <- length(type_levels)
type_colors <- setNames(my_colors[1:n_types], type_levels)
(p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)))
) +
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 18) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "right",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold")
) +
transition_reveal(as.integer(Year))
animate(p, duration = 10, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 18) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "right",
legend.title = element_text(size = 18),
legend.text = element_text(size = 16),
plot.title = element_text(size = 20, face = "bold")
) +
transition_reveal(as.integer(Year))+
view_follow()
animate(p, duration = 10, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
rendered <- animate(p, duration = 10, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 22) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "right",
legend.title = element_text(size = 25),
legend.text = element_text(size = 22),
plot.title = element_text(size = 25, face = "bold")
) +
transition_reveal(as.integer(Year))+
view_follow()
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 22) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "right",
legend.title = element_text(size = 25),
legend.text = element_text(size = 22),
plot.title = element_text(size = 25, face = "bold")
) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 22) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "right",
legend.title = element_text(size = 25),
legend.text = element_text(size = 22),
plot.title = element_text(size = 25, face = "bold"),
legend.position = c(0.2, 0.9)
) +
transition_reveal(as.integer(Year))
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 22) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.9)
legend.title = element_text(size = 25),
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 22) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.9),
legend.title = element_text(size = 25),
legend.text = element_text(size = 22),
plot.title = element_text(size = 25, face = "bold")
) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 22) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.8),
legend.title = element_text(size = 25),
legend.text = element_text(size = 22),
plot.title = element_text(size = 25, face = "bold")
) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 22) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6),
legend.title = element_text(size = 25),
legend.text = element_text(size = 22),
plot.title = element_text(size = 25, face = "bold")
) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6),
legend.title = element_text(size = 25),
legend.text = element_text(size = 22),
plot.title = element_text(size = 25, face = "bold")
) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
min(df$Year)
max(df$Year)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_continuous(breaks = (year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = (year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
year_breaks
df
df <- read.csv("Data/Intro/trend_paper_coastalRS.csv")%>%
rename(Count = `Document.Count`, Year = `Publication.Year`, Type = `Document.Type`) %>%
rbind(c(0,1960,"Other"))
year_breaks <- seq(min(df$Year), max(df$Year), by = 10)
# Match color palette to document types
type_levels <- unique(df$Type)
n_types <- length(type_levels)
type_colors <- setNames(my_colors[1:n_types], type_levels)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
df <- read.csv("Data/Intro/trend_paper_coastalRS.csv")%>%
rename(Count = `Document.Count`, Year = `Publication.Year`, Type = `Document.Type`) %>%
rbind(c(0,1960,"Other"))
df
View(df)
p
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
df
df <- read.csv("Data/Intro/trend_paper_coastalRS.csv")%>%
rename(Count = `Document.Count`, Year = `Publication.Year`, Type = `Document.Type`)
year_breaks <- seq(min(df$Year), max(df$Year), by = 10)
# Match color palette to document types
type_levels <- unique(df$Type)
n_types <- length(type_levels)
type_colors <- setNames(my_colors[1:n_types], type_levels)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
year_breaks <- seq(1970, max(df$Year), by = 10)
# Match color palette to document types
type_levels <- unique(df$Type)
n_types <- length(type_levels)
type_colors <- setNames(my_colors[1:n_types], type_levels)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
my_colors <- createPalette(24, seedcolors = c("#CC6677", "#4477AA"))
df <- read.csv("Data/Intro/trend_paper_coastalRS.csv")%>%
rename(Count = `Document.Count`, Year = `Publication.Year`, Type = `Document.Type`)
year_breaks <- seq(1970, max(df$Year), by = 10)
# Match color palette to document types
type_levels <- unique(df$Type)
n_types <- length(type_levels)
type_colors <- setNames(my_colors[1:n_types], type_levels)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
my_colors <- createPalette(24, seedcolors = c("#CC6677", "#4477AA"),range = c(30, 50))
df <- read.csv("Data/Intro/trend_paper_coastalRS.csv")%>%
rename(Count = `Document.Count`, Year = `Publication.Year`, Type = `Document.Type`)
year_breaks <- seq(1970, max(df$Year), by = 10)
# Match color palette to document types
type_levels <- unique(df$Type)
n_types <- length(type_levels)
type_colors <- setNames(my_colors[1:n_types], type_levels)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
my_colors <- createPalette(24, seedcolors = c("#CC6677", "#4477AA"),range = c(60, 90))
df <- read.csv("Data/Intro/trend_paper_coastalRS.csv")%>%
rename(Count = `Document.Count`, Year = `Publication.Year`, Type = `Document.Type`)
year_breaks <- seq(1970, max(df$Year), by = 10)
# Match color palette to document types
type_levels <- unique(df$Type)
n_types <- length(type_levels)
type_colors <- setNames(my_colors[1:n_types], type_levels)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
my_colors <- createPalette(24, seedcolors = c("#CC6677", "#4477AA"),range = c(90, 120))
df <- read.csv("Data/Intro/trend_paper_coastalRS.csv")%>%
rename(Count = `Document.Count`, Year = `Publication.Year`, Type = `Document.Type`)
year_breaks <- seq(1970, max(df$Year), by = 10)
# Match color palette to document types
type_levels <- unique(df$Type)
n_types <- length(type_levels)
type_colors <- setNames(my_colors[1:n_types], type_levels)
df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6))
my_colors <- createPalette(24, seedcolors = c("#CC6677", "#4477AA"),range = c(60, 120))
df <- read.csv("Data/Intro/trend_paper_coastalRS.csv")%>%
rename(Count = `Document.Count`, Year = `Publication.Year`, Type = `Document.Type`)
year_breaks <- seq(1970, max(df$Year), by = 10)
# Match color palette to document types
type_levels <- unique(df$Type)
n_types <- length(type_levels)
type_colors <- setNames(my_colors[1:n_types], type_levels)
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6))
p
p <- df %>%
ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
geom_col()+
scale_fill_manual(values = type_colors) +
scale_x_discrete(breaks = as.character(year_breaks)) +
labs(x = "Year", y = "Number of Documents") +
theme_minimal(base_size = 40) +  # Base size for all text
theme(
axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = c(0.2, 0.6)) +
transition_reveal(as.integer(Year))
rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))
anim_save("Images/Intro/document_trend.gif", animation = rendered)
