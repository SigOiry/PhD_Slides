) +
ease_aes("sine-in-out")
rendered_zoomed <- animate(plot_SRF, duration = 10, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
plot_SRF2 <- ggplot(functions, aes(x = Wavelength, y = val, group = band)) +
geom_line(alpha = 0.6, colour = "darkcyan", linewidth = 1) +
labs(
# title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = NULL
) +
scale_x_continuous(limits = c(400, 900)) +
theme_Bede() +
theme(
plot.title  = element_text(size = 18, face = "bold", hjust = 0.05),
plot.margin = unit(c(1.25, 1.25, 1.25, 1.25), "cm")
) +
transition_states(
Data,
transition_length = 5,
state_length      = 30
) +
ease_aes("sine-in-out")
rendered_zoomed <- animate(plot_SRF, duration = 10, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_SRF_all_sensors.gif", animation = rendered_zoomed)
plot_SRF2 <- ggplot(functions, aes(x = Wavelength, y = val, group = band)) +
geom_line(alpha = 0.6, colour = "darkcyan", linewidth = 1) +
labs(
title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = NULL
) +
scale_x_continuous(limits = c(400, 900)) +
theme_Bede() +
theme(
plot.title  = element_text(size = 18, face = "bold", hjust = 0.05),
plot.margin = unit(c(1.25, 1.25, 1.25, 1.25), "cm")
) +
transition_states(
Data,
transition_length = 5,
state_length      = 30
) +
ease_aes("sine-in-out")
rendered_zoomed <- animate(plot_SRF, duration = 10, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_SRF_all_sensors.gif", animation = rendered_zoomed)
plot_SRF2 <- ggplot(functions, aes(x = Wavelength, y = val, group = seq_along(Data))) +
geom_line(alpha = 0.6, colour = "darkcyan", linewidth = 1) +
labs(
title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = NULL
) +
scale_x_continuous(limits = c(400, 900)) +
theme_Bede() +
theme(
plot.title  = element_text(size = 18, face = "bold", hjust = 0.05),
plot.margin = unit(c(1.25, 1.25, 1.25, 1.25), "cm")
) +
transition_states(
Data,
transition_length = 5,
state_length      = 30
) +
ease_aes("sine-in-out")
functions
plot_SRF2 <- ggplot(functions, aes(x = Wavelength, y = val, group = interaction(seq_along(Data), band))) +
geom_line(alpha = 0.6, colour = "darkcyan", linewidth = 1) +
labs(
title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = NULL
) +
scale_x_continuous(limits = c(400, 900)) +
theme_Bede() +
theme(
plot.title  = element_text(size = 18, face = "bold", hjust = 0.05),
plot.margin = unit(c(1.25, 1.25, 1.25, 1.25), "cm")
) +
transition_states(
Data,
transition_length = 5,
state_length      = 30
) +
ease_aes("sine-in-out")
rendered_zoomed <- animate(plot_SRF, duration = 10, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
write.csv("Data/Part1/DataCombo.csv", DataCombo, row.names = F)
DataCombo <- read.csv("Data/Part1/DataCombo.csv")
ggplot(DataCombo,aes(x=Wavelength,
y=Mean_Reflec) ) +
geom_ribbon(aes(ymin=lwr_Reflec,
ymax=upr_Reflec,
fill=Species_Group) ,
alpha=0.4)+
geom_line(aes(colour=Species_Group) ,
linewidth=0.9) +
labs(y="Reflectance",
x="Wavelength (nm)") +
scale_x_continuous(limits =c(400,900) )+
facet_wrap(~Data,ncol=2, scales = "free_x") +
scale_fill_Bede(name="Class","Macro5_Pub") +
scale_colour_Bede(name="Class","Macro5_Pub") +
theme_Bede()+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "cm"),
strip.text = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
legend.direction = "vertical",
legend.position = "top",
legend.justification = "center")+
guides(fill=guide_legend(ncol=3),
colour=guide_legend(ncol=3))
ggplot(DataCombo,aes(x=Wavelength,
y=Mean_Reflec) ) +
geom_ribbon(aes(ymin=lwr_Reflec,
ymax=upr_Reflec,
fill=Species_Group) ,
alpha=0.4)+
geom_line(aes(colour=Species_Group) ,
linewidth=0.9) +
labs(y="Reflectance",
x="Wavelength (nm)") +
scale_x_continuous(limits =c(400,900) )+
facet_wrap(~Data,ncol=2, scales = "free_x") +
scale_fill_Bede(name="Class","Macro5_Pub") +
scale_colour_Bede(name="Class","Macro5_Pub") +
theme_Bede()+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "cm"),
strip.text = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
legend.direction = "vertical",
legend.position = "top",
legend.justification = "center")+
guides(fill=guide_legend(ncol=3),
colour=guide_legend(ncol=3))
library(tidyverse)
library(Utilities.Package)
DataCombo <- read.csv("Data/Part1/DataCombo.csv")
ggplot(DataCombo,aes(x=Wavelength,
y=Mean_Reflec) ) +
geom_ribbon(aes(ymin=lwr_Reflec,
ymax=upr_Reflec,
fill=Species_Group) ,
alpha=0.4)+
geom_line(aes(colour=Species_Group) ,
linewidth=0.9) +
labs(y="Reflectance",
x="Wavelength (nm)") +
scale_x_continuous(limits =c(400,900) )+
facet_wrap(~Data,ncol=2, scales = "free_x") +
scale_fill_Bede(name="Class","Macro5_Pub") +
scale_colour_Bede(name="Class","Macro5_Pub") +
theme_Bede()+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "cm"),
strip.text = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
legend.direction = "vertical",
legend.position = "top",
legend.justification = "center")+
guides(fill=guide_legend(ncol=3),
colour=guide_legend(ncol=3))
library(gganimate)
DataCombo <- read.csv("Data/Part1/DataCombo.csv")
unique(DataCombo$Data)
DataCombo$Data <- factor(DataCombo$Data, levels = c(
"ASD",
"PRISMA",
"Drone",
"Sentinel-2 20m"
"Pleiades",
DataCombo$Data <- factor(DataCombo$Data, levels = c(
"ASD",
"PRISMA",
"Drone",
"Sentinel-2 20m",
"Pleiades",
"Sentinel-2 10m"
))
ggplot(DataCombo,aes(x=Wavelength,
y=Mean_Reflec, group = Data) ) +
geom_ribbon(aes(ymin=lwr_Reflec,
ymax=upr_Reflec,
fill=Species_Group) ,
alpha=0.4)+
geom_line(aes(colour=Species_Group) ,
linewidth=0.9) +
labs(
title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = "Reflectance "
) +
scale_x_continuous(limits =c(400,900) )+
# facet_wrap(~Data,ncol=2, scales = "free_x") +
scale_fill_Bede(name="Class","Macro5_Pub") +
scale_colour_Bede(name="Class","Macro5_Pub") +
theme_Bede()+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "cm"),
strip.text = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
legend.direction = "vertical",
legend.position = "top",
legend.justification = "center")+
guides(fill=guide_legend(ncol=3),
colour=guide_legend(ncol=3))+
transition_states(
Data,
transition_length = 5,
state_length      = 30
) +
ease_aes("sine-in-out")
plot_SRF_sp <- ggplot(DataCombo,aes(x=Wavelength,
y=Mean_Reflec, group = Data) ) +
geom_ribbon(aes(ymin=lwr_Reflec,
ymax=upr_Reflec,
fill=Species_Group) ,
alpha=0.4)+
geom_line(aes(colour=Species_Group) ,
linewidth=0.9) +
labs(
title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = "Reflectance "
) +
scale_x_continuous(limits =c(400,900) )+
# facet_wrap(~Data,ncol=2, scales = "free_x") +
scale_fill_Bede(name="Class","Macro5_Pub") +
scale_colour_Bede(name="Class","Macro5_Pub") +
theme_Bede()+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "cm"),
strip.text = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
legend.direction = "vertical",
legend.position = "top",
legend.justification = "center")+
guides(fill=guide_legend(ncol=3),
colour=guide_legend(ncol=3))+
transition_states(
Data,
transition_length = 5,
state_length      = 30
) +
ease_aes("sine-in-out")
rendered <- animate(plot_SRF_sp, duration = 10, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_resampled_spectra.gif", animation = rendered_zoomed)
anim_save("Images/Part1/Figure_resampled_spectra.gif", animation = rendered)
ggplot(DataCombo,aes(x=Wavelength,
y=Mean_Reflec, group = Data) ) +
geom_ribbon(aes(ymin=lwr_Reflec,
ymax=upr_Reflec,
fill=Species_Group) ,
alpha=0.4)+
geom_line(aes(colour=Species_Group) ,
linewidth=0.9) +
labs(
title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = "Reflectance "
) +
scale_x_continuous(limits =c(400,900) )+
# facet_wrap(~Data,ncol=2, scales = "free_x") +
scale_fill_Bede(name="Class","Macro5_Pub") +
scale_colour_Bede(name="Class","Macro5_Pub") +
theme_Bede()+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "cm"),
strip.text = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
legend.direction = "vertical",
legend.position = "top",
legend.justification = "center")+
guides(fill=guide_legend(ncol=3),
colour=guide_legend(ncol=3))
plot_SRF_sp <- ggplot(DataCombo,aes(x=Wavelength,
y=Mean_Reflec) ) +
geom_ribbon(aes(ymin=lwr_Reflec,
ymax=upr_Reflec,
fill=Species_Group) ,
alpha=0.4)+
geom_line(aes(colour=Species_Group) ,
linewidth=0.9) +
labs(
title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = "Reflectance "
) +
scale_x_continuous(limits =c(400,900) )+
# facet_wrap(~Data,ncol=2, scales = "free_x") +
scale_fill_Bede(name="Class","Macro5_Pub") +
scale_colour_Bede(name="Class","Macro5_Pub") +
theme_Bede()+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "cm"),
strip.text = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
legend.direction = "vertical",
legend.position = "top",
legend.justification = "center")+
guides(fill=guide_legend(ncol=3),
colour=guide_legend(ncol=3))+
transition_states(
Data,
transition_length = 5,
state_length      = 30
) +
ease_aes("sine-in-out")
rendered <- animate(plot_SRF_sp, duration = 10, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_resampled_spectra.gif", animation = rendered)
functions
library(tidyverse)
library(Utilities.Package)
library(gganimate)
VEG_s<-read_csv("Data/SRF/ASD_forPaper.csv")
ASD_func<-VEG_s %>%
dplyr::rename(band=Wavelength) %>%
dplyr::mutate(Largeur=1) %>%
expand_grid(Wavelength=seq(from=round(min(.$band) ),
to=round(max(.$band) )) ) %>%
dplyr::mutate(sigma=Largeur/(2*sqrt(2*SciViews::ln(2) )) ,
val=exp(-(((Wavelength-band)^2)/(2*sigma^2) )) ,
band=as.character(band) ) %>%
dplyr::select(-c(Largeur,sigma) )%>%
dplyr::mutate(Data="ASD")
Pleiades_func<-read.table("Data/SRF/band_function_Pleiades.txt",
header = T) %>%
dplyr::mutate(Wavelength=as.integer(Wavelength*1000) ) %>%
dplyr::select(-P_1_PAN) %>%
pivot_longer(2:ncol(.) ,names_to = "band",values_to = "val") %>%
dplyr::mutate(Data="Pleiades")
S2_10_func<-read.table("Data/SRF/band_function_S2A.txt",
header = T)%>%
dplyr::select(Wavelength, S2A_2, S2A_3, S2A_4,S2A_8)%>%
pivot_longer(2:ncol(.) ,names_to = "band",values_to = "val") %>%
dplyr::mutate(Data="Sentinel-2 10m")
S2_1020_func<-read.table("Data/SRF/band_function_S2A.txt",
header = T)%>%
dplyr::select(Wavelength,  S2A_2, S2A_3, S2A_4, S2A_5, S2A_6, S2A_7, S2A_8, S2A_8A)%>%
pivot_longer(2:ncol(.) ,names_to = "band",values_to = "val") %>%
dplyr::mutate(Data="Sentinel-2 20m")
Drone_func<-read_csv("Data/SRF/band_function_Drone.csv")%>%
pivot_longer(2:ncol(.) ,names_to = "band",values_to = "val") %>%
dplyr::mutate(Data="Drone")
PRISMA_func<-read_csv("Data/SRF/band_function_PRISMA.csv") %>%
dplyr::rename(band=Wavelength) %>%
expand_grid(Wavelength=seq(from=round(min(.$band) ),
to=round(max(.$band) )) ) %>%
dplyr::mutate(sigma=Largeur/(2*sqrt(2*SciViews::ln(2) )) ,
val=exp(-(((Wavelength-band)^2)/(2*sigma^2) )) ,
band=as.character(band) ) %>%
dplyr::select(-c(Largeur,sigma) )%>%
dplyr::mutate(Data="PRISMA")
functions<-bind_rows(ASD_func,Pleiades_func,S2_10_func,
S2_1020_func,Drone_func,PRISMA_func) %>%
dplyr::select(band,Wavelength,Data,val)%>%
dplyr::filter(Wavelength<901 & Wavelength>400) %>%
dplyr::mutate(Data=as.factor(Data) ,
Data=fct_relevel(Data, c("ASD",
"PRISMA",
"Drone",
"Sentinel-2 20m",
"Pleiades",
"Sentinel-2 10m") ))
functions
plot_SRF2 <- ggplot(functions, aes(x = Wavelength, y = val, group = band)) +
geom_line(alpha = 0.6, colour = "darkcyan", linewidth = 1) +
labs(
title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = NULL
) +
scale_x_continuous(limits = c(400, 900)) +
theme_Bede() +
theme(
plot.title  = element_text(size = 18, face = "bold", hjust = 0.05),
plot.margin = unit(c(1.25, 1.25, 1.25, 1.25), "cm")
) +
transition_states(
Data,
transition_length = 5,
state_length      = 30
) +
ease_aes("sine-in-out")
rendered_zoomed <- animate(plot_SRF, duration = 10, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
plot_SRF <- ggplot(functions, aes(x = Wavelength, y = val, group = band)) +
geom_line(alpha = 0.6, colour = "darkcyan", linewidth = 1) +
labs(
title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = NULL
) +
scale_x_continuous(limits = c(400, 900)) +
theme_Bede() +
theme(
plot.title  = element_text(size = 18, face = "bold", hjust = 0.05),
plot.margin = unit(c(1.25, 1.25, 1.25, 1.25), "cm")
) +
transition_states(
Data,
transition_length = 5,
state_length      = 30
) +
ease_aes("sine-in-out")
rendered_zoomed <- animate(plot_SRF, duration = 10, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_SRF_all_sensors.gif", animation = rendered_zoomed)
plot_SRF_sp <- ggplot(DataCombo,aes(x=Wavelength,
y=Mean_Reflec) ) +
geom_ribbon(aes(ymin=lwr_Reflec,
ymax=upr_Reflec,
fill=Species_Group) ,
alpha=0.4)+
geom_line(aes(colour=Species_Group) ,
linewidth=0.9) +
labs(
# title = "{closest_state}",         # <-- dynamic title
x     = "Wavelength (nm)",
y     = "Reflectance "
) +
scale_x_continuous(limits =c(400,900) )+
# facet_wrap(~Data,ncol=2, scales = "free_x") +
scale_fill_Bede(name="Class","Macro5_Pub") +
scale_colour_Bede(name="Class","Macro5_Pub") +
theme_Bede()+
theme(plot.margin = unit(c(1.25,1.25,1.25,1.25), "cm"),
strip.text = element_text(size=14),
legend.title = element_text(size=14),
legend.text = element_text(size=14),
legend.direction = "vertical",
legend.position = "top",
legend.justification = "center")+
guides(fill=guide_legend(ncol=3),
colour=guide_legend(ncol=3))+
transition_states(
Data,
transition_length = 5,
state_length      = 30
) +
ease_aes("sine-in-out")
rendered <- animate(plot_SRF_sp, duration = 10, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_resampled_spectra.gif", animation = rendered)
land_mask <- read_sf("Data/Part1/Maks_land_SPain_Portugal_France.shp")
library(sf)
library(tidyverse)
library(Utilities.Package)
Sampling_points <- tibble(
Country = c("France", "France","France","France", "France","France", "Portugal", "Portugal","Portugal", "Spain", "Spain"),
Site = c("Arz Island","Duer","L'Epine", "Barbâtre", "Notre-Dame De Tremor", "Pont Du Guilly","Mataducos","Marinha Lanzarote","Gafanha", "Marisma de Cudon","Marisma de Cortiguera"),
x = c(-2.795421, -2.746693, -2.227908,  -2.167879, -3.746980,  -3.655206, -8.647991, -8.682370,  -8.743255, -4.025298, -4.032117),
y = c(47.603054, 47.541086,46.989746,46.956383,47.836484,47.822825, 40.666879, 40.666201,40.599341,43.406445,43.414978))
my_sf_simple <- rmapshaper::ms_simplify(land_mask, keep = 0.05)  # Simplify to 5% of points
land_mask <- read_sf("Data/Part1/Maks_land_SPain_Portugal_France.shp")
Sampling_points <- tibble(
Country = c("France", "France","France","France", "France","France", "Portugal", "Portugal","Portugal", "Spain", "Spain"),
Site = c("Arz Island","Duer","L'Epine", "Barbâtre", "Notre-Dame De Tremor", "Pont Du Guilly","Mataducos","Marinha Lanzarote","Gafanha", "Marisma de Cudon","Marisma de Cortiguera"),
x = c(-2.795421, -2.746693, -2.227908,  -2.167879, -3.746980,  -3.655206, -8.647991, -8.682370,  -8.743255, -4.025298, -4.032117),
y = c(47.603054, 47.541086,46.989746,46.956383,47.836484,47.822825, 40.666879, 40.666201,40.599341,43.406445,43.414978))
my_sf_simple <- rmapshaper::ms_simplify(land_mask, keep = 0.05)  # Simplify to 5% of points
bbox <- st_bbox(c(xmin = -15, xmax = 0, ymin = 35, ymax = 50), crs = st_crs(land_mask)) %>%
st_as_sfc()
# Crop using st_intersection
land_mask <- st_intersection(land_mask, bbox)
(
Sampling_plot <-
ggplot() +
geom_sf(data = my_sf_simple, linewidth = 0.05, alpha = 0.93, fill = "grey80") +
coord_sf(xlim=c(-15,0) ,
ylim=c(35,50),
expand = F ) +
ggforce::geom_mark_ellipse(data=Sampling_points,
aes(x=x,
y=y,
label = Country,
group = Site,
description=Site),
# x0 = -22),
size=0.2,
# position = "jitter",
fill = "goldenrod",
con.colour = "goldenrod4",
show.legend=F,
label.fontsize = 15,
label.hjust = 0.5,
con.size = 0.5,
alpha=0.8,
expand = unit(2, "mm") ,
radius = unit(2, "mm") ,
label.fill = "grey90",
label.buffer = unit(5, "mm")) +
theme_void()+
# theme_Bede_Map()+
# labs(x="Longitude",
# y="Latitude")+
# geom_label(aes(x = 521000, y = 4507794, label = "C"), size = 20)+
# scale_x_continuous(breaks = seq(-8.70, -8.60, by = 0.10))+
theme(plot.margin = unit(c(0.1,0.1,0.1,0.1), "cm") ,
legend.position = "none",
axis.title = element_blank()
# axis.text.x = element_text(size = 20),
# axis.text.y = element_text(size = 20)
)
)
ggsave(filename = "Images/Part1/map_Drone.svg",
plot = Sampling_plot,
width = 7.03,
height = 10,
units = "in")
ggsave(filename = "Images/Part1/map_Drone.svg",
plot = Sampling_plot,
width = 7.03,
height = 10,
units = "in")
