x = 1995,
y = 22,
label = expression(paste("in the Belon Estuary")),
angle = 90
)+
theme_Bede()+
theme(axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
plot.background = element_rect(fill = "white", color = NA))
)
ggsave(paste0("Images/Part2/Cover_Gracillaria_vs_Time_disc1.png"), plot, width = 10, height = 10, dpi = 200)
(plot2 <- df %>%
# dplyr::filter(date <= i) %>%
ggplot(aes(x = date, y = prop))+
geom_line(data = curve_df, aes(x = t, y = pc),size = 1.2, colour = "orange", alpha = 0.5) +
# geom_bar(stat = "identity",size = 10 )+
geom_point(size = 4)+
geom_vline(xintercept = 1980, linetype = "twodash", colour = "darkgreen") +
geom_text(x = 1974, y = 40,  label = "Lag Phase", colour = "darkgreen",hjust = 0.5, vjust = 0.5, size = 10) +
xlab("Year")+
ylab(expression(bold(paste("Cover of ", bolditalic("Gracilaria"), " (%)"))))+
geom_line(alpha = 0.4, linetype = "dashed")+
xlim(c(1970,2024))+
ylim(c(0,43))+
geom_rug(sides = "b") +  # Add ticks at the bottom for each x-value
theme_Bede()+
theme(axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
plot.background = element_rect(fill = "white", color = NA))
)
ggsave(paste0("Images/Part2/Cover_Gracillaria_vs_Time_disc2.png"), plot2, width = 10, height = 10, dpi = 200)
(plot3 <- df %>%
# dplyr::filter(date <= i) %>%
ggplot(aes(x = date, y = prop))+
geom_line(data = curve_df, aes(x = t, y = pc),size = 1.2, colour = "orange", alpha = 0.5) +
# geom_bar(stat = "identity",size = 10 )+
geom_point(size = 4)+
geom_vline(xintercept = 1980, linetype = "twodash", colour = "darkgreen") +
geom_text(x = 1974, y = 40,  label = "Lag Phase", colour = "darkgreen",hjust = 0.5, vjust = 0.5, size = 10) +
geom_vline(xintercept = 2010, linetype = "twodash", colour = "darkorange") +
geom_text(x = 1995, y = 40,  label = "Expansion Phase", colour = "darkorange",hjust = 0.5, vjust = 0.5, size = 10) +
xlab("Year")+
ylab(expression(bold(paste("Cover of ", bolditalic("Gracilaria"), " (%)"))))+
geom_line(alpha = 0.4, linetype = "dashed")+
xlim(c(1970,2024))+
ylim(c(0,43))+
geom_rug(sides = "b") +  # Add ticks at the bottom for each x-value
theme_Bede()+
theme(axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
plot.background = element_rect(fill = "white", color = NA))
)
ggsave(paste0("Images/Part2/Cover_Gracillaria_vs_Time_disc3.png"), plot3, width = 10, height = 10, dpi = 200)
(plot4 <- df %>%
# dplyr::filter(date <= i) %>%
ggplot(aes(x = date, y = prop))+
geom_line(data = curve_df, aes(x = t, y = pc),size = 1.2, colour = "orange", alpha = 0.5) +
# geom_bar(stat = "identity",size = 10 )+
geom_point(size = 4)+
geom_vline(xintercept = 1980, linetype = "twodash", colour = "darkgreen") +
geom_text(x = 1974, y = 40,  label = "Lag Phase", colour = "darkgreen",hjust = 0.5, vjust = 0.5, size = 10) +
geom_vline(xintercept = 2010, linetype = "twodash", colour = "darkorange") +
geom_text(x = 1995, y = 40,  label = "Expansion Phase", colour = "darkorange",hjust = 0.5, vjust = 0.5, size = 10) +
geom_text(x = 2017, y = 40,  label = "Saturation", colour = "darkred",hjust = 0.5, vjust = 0.5, size = 10) +
xlab("Year")+
ylab(expression(bold(paste("Cover of ", bolditalic("Gracilaria"), " (%)"))))+
geom_line(alpha = 0.4, linetype = "dashed")+
xlim(c(1970,2024))+
ylim(c(0,43))+
geom_rug(sides = "b") +  # Add ticks at the bottom for each x-value
theme_Bede()+
theme(axis.text.x = element_text(size = 15),
axis.text.y = element_text(size = 15),
axis.title.x = element_text(size = 20),
axis.title.y = element_text(size = 20),
plot.background = element_rect(fill = "white", color = NA))
)
ggsave(paste0("Images/Part2/Cover_Gracillaria_vs_Time_disc4.png"), plot4, width = 10, height = 10, dpi = 200)
::: {.absolute top="20%" left="50%" .fragment .fade-in-then-out fragment-index="8"}
plot_S2 <- leaflet() %>%
# addTiles() %>%
setView(lng =-3.121394, lat = 47.585714, zoom = 14)  %>%
addMapPane("right", zIndex = 1) %>%
addMapPane("left", zIndex = 1) %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Toner",
options = c(providerTileOptions(minZoom = 8, maxZoom = 100),
pathOptions(pane = "left")),
layerId = "UnImpacted"
) %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Toner",
options = c(providerTileOptions(minZoom = 8, maxZoom = 100),
pathOptions(pane = "right")),
layerId = "Impacted") %>% # Add raste
addRasterRGB(img_during, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "right")),
layerId = "During") %>%
addRasterRGB(img_before, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "left")),
layerId = "Before") %>%
addRasterRGB(img_after, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "right")),
layerId = "Impacted",
group = "Image After") %>%
addRasterRGB(img_after, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "left")),
layerId = "UnImpacted",
group = "Image After") %>%
addCircleMarkers(
data        = Unimpacted,
radius      = 2,
color       = "lightgreen",
fillColor   = "lightgreen",
fillOpacity = 0.8,
group       = "Unimpacted Points",   # <--- group name
# options     = pathOptions(pane = "left"),
popup = ~paste0("<img src='",path, "' width='1000'/>"),
popupOptions = popupOptions(
maxWidth  = 600*5,    # Maximum width of the popup
minWidth  = 100*5,    # Minimum width of the popup
maxHeight = 600*5)
) %>%
addCircleMarkers(
data        = Impacted,
radius      = 2,
color       = "goldenrod",
fillColor   = "goldenrod",
fillOpacity = 0.8,
group       = "Impacted Points",     # <--- group name
# options     = pathOptions(pane = "right"),
popup = ~paste0("<img src='",path, "' width='1000'/>"),
popupOptions = popupOptions(
maxWidth  = 600*5,    # Maximum width of the popup
minWidth  = 100*5,    # Minimum width of the popup
maxHeight = 600*5)
) %>%
leaflet.extras2::addSidebyside(leftId = "UnImpacted",
rightId = "Impacted") %>%
addLegend(
position = "bottomright",
colors   = c("lightgreen", "goldenrod"),
labels   = c("Unimpacted Points", "Impacted Points"),
title    = "Legend"
) %>%
# Add Layers Control to toggle point layers on/off
addLayersControl(
overlayGroups = c("Unimpacted Points", "Impacted Points", "Image After"),
options = layersControlOptions(collapsed = FALSE)
)%>%
# Hide groups by default (turn them off at startup)
hideGroup("Unimpacted Points") %>%
hideGroup("Impacted Points") %>%
hideGroup("Image After")
library(tidyverse)
library(leaflet)
library(sf)
library(leafem)
library(leaflet.extras2)
library(terra)
img_during <- "Data/Part3/S2/Heatwaves_S2.tif" %>%
raster::stack() %>%
raster::projectRaster(crs = raster::crs("+init=EPSG:3857"))
img_before <- "Data/Part3/S2/Heatwaves_S2_before.tif" %>%
raster::stack() %>%
raster::projectRaster(crs = raster::crs("+init=EPSG:3857"))
img_after <- "Data/Part3/S2/Heatwaves_S2_after.tif" %>%
raster::stack() %>%
raster::projectRaster(crs = raster::crs("+init=EPSG:3857"))
# NAflag(img) <- NA
Unimpacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass")
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")
all_QPs <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T,)
# points <- sf::st_transform(points, crs = 3857)
plot_S2 <- leaflet() %>%
# addTiles() %>%
setView(lng =-3.121394, lat = 47.585714, zoom = 14)  %>%
addMapPane("right", zIndex = 1) %>%
addMapPane("left", zIndex = 1) %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Toner",
options = c(providerTileOptions(minZoom = 8, maxZoom = 100),
pathOptions(pane = "left")),
layerId = "UnImpacted"
) %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Toner",
options = c(providerTileOptions(minZoom = 8, maxZoom = 100),
pathOptions(pane = "right")),
layerId = "Impacted") %>% # Add raste
addRasterRGB(img_during, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "right")),
layerId = "During") %>%
addRasterRGB(img_before, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "left")),
layerId = "Before") %>%
addRasterRGB(img_after, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "right")),
layerId = "Impacted",
group = "Image After") %>%
addRasterRGB(img_after, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "left")),
layerId = "UnImpacted",
group = "Image After") %>%
addCircleMarkers(
data        = Unimpacted,
radius      = 2,
color       = "lightgreen",
fillColor   = "lightgreen",
fillOpacity = 0.8,
group       = "Unimpacted Points",   # <--- group name
# options     = pathOptions(pane = "left"),
popup = ~paste0("<img src='",path, "' width='1000'/>"),
popupOptions = popupOptions(
maxWidth  = 600*5,    # Maximum width of the popup
minWidth  = 100*5,    # Minimum width of the popup
maxHeight = 600*5)
) %>%
addCircleMarkers(
data        = Impacted,
radius      = 2,
color       = "goldenrod",
fillColor   = "goldenrod",
fillOpacity = 0.8,
group       = "Impacted Points",     # <--- group name
# options     = pathOptions(pane = "right"),
popup = ~paste0("<img src='",path, "' width='1000'/>"),
popupOptions = popupOptions(
maxWidth  = 600*5,    # Maximum width of the popup
minWidth  = 100*5,    # Minimum width of the popup
maxHeight = 600*5)
) %>%
leaflet.extras2::addSidebyside(leftId = "UnImpacted",
rightId = "Impacted") %>%
addLegend(
position = "bottomright",
colors   = c("lightgreen", "goldenrod"),
labels   = c("Unimpacted Points", "Impacted Points"),
title    = "Legend"
) %>%
# Add Layers Control to toggle point layers on/off
addLayersControl(
overlayGroups = c("Unimpacted Points", "Impacted Points", "Image After"),
options = layersControlOptions(collapsed = FALSE)
)%>%
# Hide groups by default (turn them off at startup)
hideGroup("Unimpacted Points") %>%
hideGroup("Impacted Points") %>%
hideGroup("Image After")
plot <- leaflet() %>%
# addTiles() %>%
setView(lng =-3.121394, lat = 47.585714, zoom = 14) %>%
addMapPane("right", zIndex = 0) %>%
addMapPane("left", zIndex = 0) %>%
# addProviderTiles(provider = providers$Esri.WorldImagery) %>%
# addProviderTiles(providers$CartoDB, group="carto", layerId = "RGBid", options = pathOptions(pane = "left")) %>%
# addProviderTiles(providers$CartoDB, group="carto", layerId = "DSMid", options = pathOptions(pane = "right")) %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Toner",
options = c(providerTileOptions(minZoom = 8, maxZoom = 100),
pathOptions(pane = "left")),
layerId = "RGB"
) %>%
addProviderTiles(providers$OpenStreetMap,
group = "Toner",
options = c(providerTileOptions(minZoom = 8, maxZoom = 100),
pathOptions(pane = "right")),
layerId = "DSM_pred") %>%
addRasterImage(EmersionTime,
colors=pal2,
# maxBytes = 200,
options = pathOptions(pane = "right"),
layerId = "DSM_pred") %>%
leaflet.extras2::addSidebyside(leftId = "RGB",
rightId = "DSM_pred") %>%
addLegend(pal = pal2, values = c(10,16),
title = "Emersion Time per Day (hours)",
group = "DSM_pred")
stk <- "Data/Part3/Stack_all_variables.tif" %>%
rast() %>%
project(crs("EPSG:4326"))
stk
htmlwidgets::saveWidget(plot_S2, file="maps/map_HW_Quiberon.html", selfcontained = F)
Unimpacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass")
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")
Impacted
all_QPs
img_list <- list.files("Data/Biolittoral")
img_list
img_list <- list.files("Data/Biolittoral", recursive = T)
img_list <- list.files("Data/Biolittoral", recursive = T, pattern = ".jpg")
img_list
img_list <- list.files("Data/Biolittoral", recursive = T, pattern = ".jpg") %>%
rename(path = "value") %>%
mutate(filename = basename(path))
img_list <- list.files("Data/Biolittoral", recursive = T, pattern = ".jpg") %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filename = basename(path))
img_list
Unimpacted
Unimpacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass") %>%
dplyr::select(-path)
Unimpacted
# NAflag(img) <- NA
img_list <- list.files("Data/Biolittoral", recursive = T, pattern = ".jpg") %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filenam = basename(path))
Unimpacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass") %>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
Unimpacted
# NAflag(img) <- NA
img_list <- list.files("Data/Biolittoral", recursive = T, pattern = ".jpg") %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filenam = basename(path))
Unimpacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass") %>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
plot_S2_2 <- leaflet() %>%
# addTiles() %>%
setView(lng =-3.121394, lat = 47.585714, zoom = 15)  %>%
addMapPane("right", zIndex = 1) %>%
addMapPane("left", zIndex = 1) %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Toner",
options = c(providerTileOptions(minZoom = 8, maxZoom = 100),
pathOptions(pane = "left")),
layerId = "UnImpacted"
) %>%
addProviderTiles(providers$Esri.WorldImagery,
group = "Toner",
options = c(providerTileOptions(minZoom = 8, maxZoom = 100),
pathOptions(pane = "right")),
layerId = "Impacted") %>% # Add raste
addRasterRGB(img_during, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "right")),
layerId = "During") %>%
addRasterRGB(img_before, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "left")),
layerId = "Before") %>%
addRasterRGB(img_after, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "right")),
layerId = "Impacted",
group = "Image After") %>%
addRasterRGB(img_after, r = 1, g = 2, b = 3, na.color = "transparent",
options = c(pathOptions(pane = "left")),
layerId = "UnImpacted",
group = "Image After") %>%
addCircleMarkers(
data        = Unimpacted,
radius      = 2,
color       = "lightgreen",
fillColor   = "lightgreen",
fillOpacity = 0.8,
group       = "Unimpacted Points",   # <--- group name
# options     = pathOptions(pane = "left"),
popup = ~paste0("<img src='",path, "' width='1000'/>"),
popupOptions = popupOptions(
maxWidth  = 600*5,    # Maximum width of the popup
minWidth  = 100*5,    # Minimum width of the popup
maxHeight = 600*5)
) %>%
addCircleMarkers(
data        = Impacted,
radius      = 2,
color       = "goldenrod",
fillColor   = "goldenrod",
fillOpacity = 0.8,
group       = "Impacted Points",     # <--- group name
# options     = pathOptions(pane = "right"),
popup = ~paste0("<img src='",path, "' width='1000'/>"),
popupOptions = popupOptions(
maxWidth  = 600*5,    # Maximum width of the popup
minWidth  = 100*5,    # Minimum width of the popup
maxHeight = 600*5)
) %>%
leaflet.extras2::addSidebyside(leftId = "UnImpacted",
rightId = "Impacted") %>%
addLegend(
position = "bottomright",
colors   = c("lightgreen", "goldenrod"),
labels   = c("Unimpacted Points", "Impacted Points"),
title    = "Legend"
) %>%
# Add Layers Control to toggle point layers on/off
addLayersControl(
overlayGroups = c("Unimpacted Points", "Impacted Points", "Image After"),
options = layersControlOptions(collapsed = FALSE)
)%>%
# Hide groups by default (turn them off at startup)
# hideGroup("Unimpacted Points") %>%
# hideGroup("Impacted Points") %>%
hideGroup("Image After")
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam") %>%
mutate(path = gsub("/",`\`,path))
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam") %>%
mutate(path = gsub("/","`\`",path))
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam") %>%
mutate(path = gsub("/","\\",path))
Impacted
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam") %>%
mutate(path = gsub("/","\\\\",path))
Impacted
# NAflag(img) <- NA
img_list <- list.files("Data/Biolittoral", recursive = T, full.names = T,pattern = ".jpg") %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filenam = basename(path))
Unimpacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass") %>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
mutate(path = gsub("Data","./Data",path))
# NAflag(img) <- NA
img_list <- list.files("Data/Biolittoral", recursive = T, full.names = T,pattern = ".jpg") %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filenam = basename(path)) %>%
mutate(path = gsub("Data","./Data",path))
img_list
# NAflag(img) <- NA
img_list <- list.files("Data/Biolittoral", recursive = T, full.names = T, pattern = ".jpg") %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filenam = basename(path)) %>%
mutate(path = gsub("Data","./Data",path))
Unimpacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass") %>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")%>%
mutate(path = gsub("Data","./Data",path))
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")%>%
mutate(path = gsub("Data","./Data",path))
Impacted
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")%>%
mutate(path = gsub("Data","../Data",path))
Impacted
sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
# NAflag(img) <- NA
img_list <- list.files("Data/Biolittoral", recursive = T, full.names = T, pattern = ".jpg") %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filenam = basename(path)) %>%
mutate(path = gsub("Data","../Data",path))
sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass") %>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
# NAflag(img) <- NA
img_list <- list.files("Data/Biolittoral", recursive = T, full.names = T,pattern = ".jpg") %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filenam = basename(path)) %>%
mutate(path = gsub("Data","../Data",path))
Unimpacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass") %>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
Impacted
