mutate(filenam = basename(path)) %>%
mutate(path = gsub("Data","./Data",path))
Unimpacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass") %>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")%>%
mutate(path = gsub("Data","./Data",path))
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")%>%
mutate(path = gsub("Data","./Data",path))
Impacted
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")%>%
mutate(path = gsub("Data","../Data",path))
Impacted
sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
# NAflag(img) <- NA
img_list <- list.files("Data/Biolittoral", recursive = T, full.names = T, pattern = ".jpg") %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filenam = basename(path)) %>%
mutate(path = gsub("Data","../Data",path))
sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass") %>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
# NAflag(img) <- NA
img_list <- list.files("Data/Biolittoral", recursive = T, full.names = T,pattern = ".jpg") %>%
as_tibble() %>%
rename(path = "value") %>%
mutate(filenam = basename(path)) %>%
mutate(path = gsub("Data","../Data",path))
Unimpacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty =="Healthy_seagrass") %>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
Impacted  <- sf::st_read("Data/Part3/S2/GCP_biolittoral.shp",quiet = T) %>%
dplyr::filter(Trgt_ty !="Healthy_seagrass")%>%
dplyr::select(-path) %>%
left_join(img_list, by = "filenam")
Impacted
library(sf)
library(tidyverse)
coms <- read_sf("Data/Intro/commune.shp")
# Create bounding box as an sf object
bbox <- st_as_sfc(st_bbox(c(xmin = 252579, xmax = 323049,
ymin = 6655218, ymax = 6708566),
crs = st_crs(coms)))
cropped_coms <- st_intersection(coms, bbox)
dragage <- read_sf("Data/Intro/N_zones_homogenes_dragage_S_metropole_EPSG2154.shp")%>%
st_transform(st_crs(cropped_coms)) %>%
st_intersection(bbox)
Port <- read_sf("Data/Intro/N_carenage_P_epsg3857_20220630.shp") %>%
st_transform(st_crs(cropped_coms))%>%
st_intersection(bbox)
Immersion_sed <- read_sf("Data/Intro/N_immersion_S_metropole_epsg2154_2005-2020.shp") %>%
st_transform(st_crs(cropped_coms))%>%
st_intersection(bbox)
Aquaculture <- read_sf("Data/Intro/cadastre_emprise_2025.shp") %>%
st_transform(st_crs(cropped_coms))%>%
st_intersection(bbox)
Eol <- read_sf("Data/Intro/parc_emr_autorise_en_projet.shp") %>%
st_transform(st_crs(cropped_coms))%>%
st_intersection(bbox)
Ouvrage <- read_sf("Data/Intro/N_ouvrages_littoraux_metropole_epsg2154_L.shp") %>%
st_transform(st_crs(cropped_coms))%>%
st_intersection(bbox)
# Crop the polygon with the bounding box
plot_Eol <- ggplot() +
geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
geom_sf(data = Port, color = "darkred") +
geom_sf(data = dragage, color = "goldenrod3", fill = "goldenrod3") +
geom_sf(data = Immersion_sed, color = "goldenrod3", fill = "goldenrod3") +
geom_sf(data = Aquaculture, color = "darkblue", fill = "darkblue") +
geom_sf(data = Eol, color = "yellow", fill = "yellow") +
# geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
# geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") +
# selected polygons
coord_sf(expand = F)+
theme_void()
plot_Eol
colourpicker:::colourPickerAddin()
plot_Eol <- ggplot() +
geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
geom_sf(data = Port, color = "darkred") +
geom_sf(data = dragage, color = "goldenrod3", fill = "goldenrod3") +
geom_sf(data = Immersion_sed, color = "goldenrod3", fill = "goldenrod3") +
geom_sf(data = Aquaculture, color = "darkblue", fill = "darkblue") +
geom_sf(data = Eol, color = "orange", fill = "orange") +
# geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
# geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") +
# selected polygons
coord_sf(expand = F)+
theme_void()
plot_Eol
plot_Eol <- ggplot() +
geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
geom_sf(data = Port, color = "darkred") +
geom_sf(data = dragage, color = "goldenrod", fill = "goldenrod") +
geom_sf(data = Immersion_sed, color = "goldenrod", fill = "goldenrod") +
geom_sf(data = Aquaculture, color = "darkblue", fill = "darkblue") +
geom_sf(data = Eol, color = "orange", fill = "orange") +
# geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
# geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") +
# selected polygons
coord_sf(expand = F)+
theme_void()
plot_Eol
colourpicker:::colourPickerAddin()
plot_Eol <- ggplot() +
geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
geom_sf(data = Port, color = "darkred") +
geom_sf(data = dragage, color = "goldenrod3", fill = "goldenrod3") +
geom_sf(data = Immersion_sed, color = "goldenrod3", fill = "goldenrod3") +
geom_sf(data = Aquaculture, color = "darkblue", fill = "darkblue") +
geom_sf(data = Eol, color = "gold", fill = "gold") +
# geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
# geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") +
# selected polygons
coord_sf(expand = F)+
theme_void()
plot_Eol
plot_Eol <- ggplot() +
geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
geom_sf(data = Port, color = "darkred") +
geom_sf(data = dragage, color = "goldenrod3", fill = "goldenrod3") +
geom_sf(data = Immersion_sed, color = "goldenrod3", fill = "goldenrod3") +
geom_sf(data = Aquaculture, color = "darkblue", fill = "darkblue") +
geom_sf(data = Eol, color = "gold", fill = "gold") +
# geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
# geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") +
# selected polygons
coord_sf(expand = F)+
theme_void()
ggsave("Images/Intro/Map_BB_Eol.png", plot_Eol, width = 10, height=8.12, dpi=150)
plot_ouvrage <- ggplot() +
geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
geom_sf(data = Port, color = "darkred") +
geom_sf(data = dragage, color = "goldenrod3", fill = "goldenrod3") +
geom_sf(data = Immersion_sed, color = "goldenrod3", fill = "goldenrod3") +
geom_sf(data = Aquaculture, color = "darkblue", fill = "darkblue") +
geom_sf(data = Eol, color = "gold", fill = "gold") +
geom_sf(data = Ouvrage, color = "black", fill = "black", linewidth = 2) +
# geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
# geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") +
# selected polygons
coord_sf(expand = F)+
theme_void()
ggsave("Images/Intro/Map_BB_ouvrage.png", plot_ouvrage, width = 10, height=8.12, dpi=150)
library(tidyverse)
library(signal)
library(Utilities.Package)
library(gganimate)
rhodo <- "Data/Part1/BELON_STD.csv" %>%
read.csv() %>%
dplyr::filter(Letter == "C") %>%
group_by(Wavelength) %>%
reframe(Rhodophyceae = mean(mean_STD))
# Apply Savitzky-Golay smoothing
# Choose polynomial order and window size
sgolay_order <- 2
sgolay_window <- 11  # Must be odd and >= order + 2
# Make sure window size is not larger than number of rows
sgolay_window <- min(sgolay_window, nrow(rhodo))
if (sgolay_window %% 2 == 0) sgolay_window <- sgolay_window - 1  # Ensure it's odd
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
ggplot(rhodo)+
geom_line(aes(x = Wavelength, y = Rhodophyceae))
ggplot(rhodo)+
geom_line(aes(x = Wavelength, y = Rhodophyceae))
log_func <- function(x) {
0.7 + 0.3 * log(x / 400) / log(900 / 400)
}
speclib <- "Data/Part1/spec_lib.csv" %>%
read.csv() %>%
select(-c(X,OSM,Bare.Sediment,Xanthophyceae)) %>%
left_join(rhodo, by = "Wavelength") %>%
pivot_longer(-Wavelength, names_to = "Class",values_to = "Ref")  %>%
mutate(Class = case_when(Class == "Magnoliosida" ~ "C - Magnoliopsida",
Class == "Ulvophyceae" ~ "B - Chlorophyceae",
Class == "Rhodophyceae" ~ "E - Florideophyceae",
Class == "Bacillariophyceae" ~ "D - Bacillariophyceae",
Class == "Phaeophyceae" ~ "A - Phaeophyceae",
TRUE ~ Class)) %>%
group_by(Class) %>%
reframe(Wavelength = Wavelength,
Ref = (Ref-min(Ref))/(max(Ref)-min(Ref))) %>%
mutate(Ref = case_when(Class == "B - Chlorophyceae" ~ log_func(Wavelength)*Ref,
T ~ Ref))
speclib$Class <- factor(speclib$Class, levels = c(
"A - Phaeophyceae",
"B - Chlorophyceae",
"C - Magnoliopsida",
"D - Bacillariophyceae",
"E - Florideophyceae"
))
colscale <- c("D - Bacillariophyceae" = "#DAA520",
"B - Chlorophyceae" = "#b3ff1a",
"C - Magnoliopsida" = "#389318",
"A - Phaeophyceae" = "#873e23",
"E - Florideophyceae" = "#b3002d")
(init_plot <- speclib %>%
# dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida")) %>%
ggplot()+
# geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
geom_line(aes(x = Wavelength, y = Ref, color = Class, group = Class), linewidth = 1.5)+
scale_color_manual(values=colscale)+
theme_Bede()+
ylab("Standardised Reflectance") +
xlab("Wavelength (nm)") +
theme(
legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
legend.text.align = 0,
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)
)
faded_zoomed_out <- speclib %>%
dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida"),
Wavelength >= 450,
Wavelength <= 665) %>%
ggplot()+
geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
geom_line(aes(x = Wavelength, y = Ref, color = Class, group = 1L), linewidth = 1.5)+
scale_color_manual(values=colscale)+
theme_Bede()+
ylab("Standardised Reflectance")+
xlab("Wavelength (nm)")+
theme(legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))+
coord_cartesian(xlim = c(450, 665)) +
# ggtitle(paste("Zoom jusqu’à", round(x_max), "nm")) +
theme(
legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)+
transition_states(Class,
transition_length = 2,
state_length = 1)
fade_class <- speclib %>%
dplyr::filter(!Class %in% c("Chlorophyceae", "Magnoliopsida"),
Wavelength >= 450,
Wavelength <= 665 ) %>%
rename(Class1 = "Class")
faded_zoomed_out <- speclib %>%
dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida"),
Wavelength >= 450,
Wavelength <= 665) %>%
ggplot()+
geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
geom_line(aes(x = Wavelength, y = Ref, color = Class, group = 1L), linewidth = 1.5)+
scale_color_manual(values=colscale)+
theme_Bede()+
ylab("Standardised Reflectance")+
xlab("Wavelength (nm)")+
theme(legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))+
coord_cartesian(xlim = c(450, 665)) +
# ggtitle(paste("Zoom jusqu’à", round(x_max), "nm")) +
theme(
legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)+
transition_states(Class,
transition_length = 2,
state_length = 1)
faded_zoomed_out <- speclib %>%
speclib %>%
dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida"))
speclib <- "Data/Part1/spec_lib.csv" %>%
read.csv() %>%
select(-c(X,OSM,Bare.Sediment,Xanthophyceae)) %>%
left_join(rhodo, by = "Wavelength") %>%
pivot_longer(-Wavelength, names_to = "Class",values_to = "Ref")  %>%
mutate(Class = case_when(Class == "Magnoliosida" ~ "C - Magnoliopsida",
Class == "Ulvophyceae" ~ "B - Chlorophyceae",
Class == "Rhodophyceae" ~ "E - Florideophyceae",
Class == "Bacillariophyceae" ~ "D - Bacillariophyceae",
Class == "Phaeophyceae" ~ "A - Phaeophyceae",
TRUE ~ Class)) %>%
group_by(Class) %>%
reframe(Wavelength = Wavelength,
Ref = (Ref-min(Ref))/(max(Ref)-min(Ref))) %>%
mutate(Ref = case_when(Class == "B - Chlorophyceae" ~ log_func(Wavelength)*Ref,
T ~ Ref))
speclib$Class <- factor(speclib$Class, levels = c(
"A - Phaeophyceae",
"B - Chlorophyceae",
"C - Magnoliopsida",
"D - Bacillariophyceae",
"E - Florideophyceae"
))
colscale <- c("D - Bacillariophyceae" = "#DAA520",
"B - Chlorophyceae" = "#b3ff1a",
"C - Magnoliopsida" = "#389318",
"A - Phaeophyceae" = "#873e23",
"E - Florideophyceae" = "#b3002d")
speclib %>%
dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida"))
speclib
speclib %>%
dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida"),
Wavelength >= 450,
Wavelength <= 665)
faded_zoomed_out <- speclib %>%
dplyr::filter(Class %in% c("B - Chlorophyceae", "C - Magnoliopsida")) %>%
mutate(Class = case_when(Class == "B - Chlorophyceae" ~ "Chlorophyceae",
Class == "C - Magnoliopsida" ~ "Magnoliopsida"))
faded_zoomed_out
colscale
colscale_disc <- c("Chlorophyceae" = "#b3ff1a",
"Magnoliopsida" = "#389318")
faded_zoomed_out <- speclib %>%
dplyr::filter(Class %in% c("B - Chlorophyceae", "C - Magnoliopsida")) %>%
mutate(Class = case_when(Class == "B - Chlorophyceae" ~ "Chlorophyceae",
Class == "C - Magnoliopsida" ~ "Magnoliopsida")) %>%
ggplot()+
geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
geom_line(aes(x = Wavelength, y = Ref, color = Class, group = 1L), linewidth = 1.5)+
scale_color_manual(values=colscale)+
theme_Bede()+
ylab("Standardised Reflectance")+
xlab("Wavelength (nm)")+
theme(legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))+
coord_cartesian(xlim = c(450, 665)) +
# ggtitle(paste("Zoom jusqu’à", round(x_max), "nm")) +
theme(
legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)+
transition_states(Class,
transition_length = 2,
state_length = 1)
rendered_zoomed_out <- animate(faded_zoomed_out, duration = 2, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_Hyperspectral_Faded_zoomed_out.gif", animation = rendered_zoomed_out)
faded_zoomed_out <- speclib %>%
dplyr::filter(Class %in% c("B - Chlorophyceae", "C - Magnoliopsida")) %>%
mutate(Class = case_when(Class == "B - Chlorophyceae" ~ "Chlorophyceae",
Class == "C - Magnoliopsida" ~ "Magnoliopsida")) %>%
ggplot()+
geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
geom_line(aes(x = Wavelength, y = Ref, color = Class, group = 1L), linewidth = 1.5)+
scale_color_manual(values=colscale_disc)+
theme_Bede()+
ylab("Standardised Reflectance")+
xlab("Wavelength (nm)")+
theme(legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))+
coord_cartesian(xlim = c(450, 665)) +
# ggtitle(paste("Zoom jusqu’à", round(x_max), "nm")) +
theme(
legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)+
transition_states(Class,
transition_length = 2,
state_length = 1)
rendered_zoomed_out <- animate(faded_zoomed_out, duration = 2, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_Hyperspectral_Faded_zoomed_out.gif", animation = rendered_zoomed_out)
max(speclib$Ref)
max(speclib$Wavelength)
faded_zoomed_out <- speclib %>%
dplyr::filter(Class %in% c("B - Chlorophyceae", "C - Magnoliopsida")) %>%
mutate(Class = case_when(Class == "B - Chlorophyceae" ~ "Chlorophyceae",
Class == "C - Magnoliopsida" ~ "Magnoliopsida")) %>%
ggplot()+
geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
geom_line(aes(x = Wavelength, y = Ref, color = Class, group = 1L), linewidth = 1.5)+
scale_color_manual(values=colscale_disc)+
theme_Bede()+
ylab("Standardised Reflectance")+
xlab("Wavelength (nm)")+
theme(legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))+
coord_cartesian(xlim = c(400, 900)) +
# ggtitle(paste("Zoom jusqu’à", round(x_max), "nm")) +
theme(
legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)+
transition_states(Class,
transition_length = 2,
state_length = 1)
rendered_zoomed_out <- animate(faded_zoomed_out, duration = 2, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_Hyperspectral_Faded_zoomed_out.gif", animation = rendered_zoomed_out)
faded_zoomed_out <- speclib %>%
dplyr::filter(Class %in% c("B - Chlorophyceae", "C - Magnoliopsida")) %>%
mutate(Class = case_when(Class == "B - Chlorophyceae" ~ "Chlorophyceae",
Class == "C - Magnoliopsida" ~ "Magnoliopsida")) %>%
ggplot()+
geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
geom_line(aes(x = Wavelength, y = Ref, color = Class, group = 1L), linewidth = 1.5)+
scale_color_manual(values=colscale_disc)+
theme_Bede()+
ylab("Standardised Reflectance")+
xlab("Wavelength (nm)")+
theme(legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))+
coord_cartesian(xlim = c(420, 900)) +
# ggtitle(paste("Zoom jusqu’à", round(x_max), "nm")) +
theme(
legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)+
transition_states(Class,
transition_length = 2,
state_length = 1)
rendered_zoomed_out <- animate(faded_zoomed_out, duration = 2, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_Hyperspectral_Faded_zoomed_out.gif", animation = rendered_zoomed_out)
faded_zoomed_out <- speclib %>%
dplyr::filter(Class %in% c("B - Chlorophyceae", "C - Magnoliopsida")) %>%
mutate(Class = case_when(Class == "B - Chlorophyceae" ~ "Chlorophyceae",
Class == "C - Magnoliopsida" ~ "Magnoliopsida")) %>%
ggplot()+
geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
geom_line(aes(x = Wavelength, y = Ref, color = Class, group = 1L), linewidth = 1.5)+
scale_color_manual(values=colscale_disc)+
theme_Bede()+
ylab("Standardised Reflectance")+
xlab("Wavelength (nm)")+
theme(legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))+
coord_cartesian(xlim = c(450, 900)) +
# ggtitle(paste("Zoom jusqu’à", round(x_max), "nm")) +
theme(
legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)+
transition_states(Class,
transition_length = 2,
state_length = 1)
rendered_zoomed_out <- animate(faded_zoomed_out, duration = 2, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_Hyperspectral_Faded_zoomed_out.gif", animation = rendered_zoomed_out)
faded_zoomed_out <- speclib %>%
dplyr::filter(Class %in% c("B - Chlorophyceae", "C - Magnoliopsida")) %>%
mutate(Class = case_when(Class == "B - Chlorophyceae" ~ "Chlorophyceae",
Class == "C - Magnoliopsida" ~ "Magnoliopsida")) %>%
ggplot()+
# geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
geom_line(aes(x = Wavelength, y = Ref, color = Class, group = 1L), linewidth = 1.5)+
scale_color_manual(values=colscale_disc)+
theme_Bede()+
ylab("Standardised Reflectance")+
xlab("Wavelength (nm)")+
theme(legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12))+
coord_cartesian(xlim = c(450, 900)) +
# ggtitle(paste("Zoom jusqu’à", round(x_max), "nm")) +
theme(
legend.position = c(0.15, 0.8),
legend.text = element_text(size = 12),
axis.text.x = element_text(size = 12),
axis.text.y = element_text(size = 12)
)+
transition_states(Class,
transition_length = 2,
state_length = 1)
rendered_zoomed_out <- animate(faded_zoomed_out, duration = 2, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))
anim_save("Images/Part1/Figure_Hyperspectral_Faded_zoomed_out.gif", animation = rendered_zoomed_out)
