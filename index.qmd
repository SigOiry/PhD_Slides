---
format:
  revealjs:
    transition: slide
    theme:
      - default
      - style.scss
    footer: ""
    width: 2400
    height: 1350
    auto-animate: true
    auto-play-media: true
    backgroundTransition: fade
    controls: false
    slide-number: true
    include-after-body: moving-text.js
    # includes:
    #   before_body: custom.js
    simplemenu:
        barhtml:
            header: "<div class='menubar'></a><ul class='menu'></ul><div class='slide-number'></div><div>"
        scale: 0.8
revealjs-plugins:
  - simplemenu
editor_options: 
  chunk_output_type: console
---

```{r library}
#| cache: true
#| echo: false
#| eval: true
#| warning: false

library(tidyverse)
library(Utilities.Package)
library(sf) 
library(rnaturalearth) 
library(rnaturalearthdata) 
library(rnaturalearthhires)
library(leaflet)
library("leaflet.extras")
```


```{r update gitignore}
#| cache: true
#| echo: false
#| warning: false
#| eval: false

library(fs)

# Define the size threshold in bytes (100 MB)
size_threshold <- 100 * 1024 * 1024

# Get a list of all files in the repository
files <- dir_ls(path = "Slides", recurse = TRUE, type = "file")

# Filter files larger than the size threshold
large_files <- files[file_info(files)$size > size_threshold]

# Check if there are large files
if (length(large_files) > 0) {
  # Read the existing .gitignore file if it exists
  gitignore_path <- ".gitignore"
  gitignore_content <- if (file_exists(gitignore_path)) {
    readLines(gitignore_path)
  } else {
    character(0)
  }
  
  # Identify files not already in .gitignore
  files_to_add <- large_files[!large_files %in% gitignore_content]
  
  # Append new large files to .gitignore
  if (length(files_to_add) > 0) {
    writeLines(c(gitignore_content, files_to_add), gitignore_path)
    message(length(files_to_add), " file(s) added to .gitignore.")
  } else {
    message("No new files to add to .gitignore.")
  }
} else {
  message("No files larger than 100 MB found.")
}
```


## {.hide data-state="hide-menubar"}

::: {.gradient_box style="text-align: center; position: absolute; left: 50%; top: 22%; width: 1800px; transform: translate(-50%, -50%)"}
[PhD Thesis Presentation]{style="color: black; font-size: 80px; font-weight: bold; line-height: 1em; margin: 0px; text-align: justify-all;"}
:::

::: {.gradient_box style="text-align: center; position: absolute; left: 50%; top: 37%; width: 1800px; transform: translate(-50%, -50%)"}
[Characterization of Intertidal Vegetation on European Coasts Using MultiScale Remote Sensing in Response to Natural and Anthropogenic Pressures]{style="color: black; font-size: 60px; line-height: 1em; margin: 0px; text-align: justify-all;"}
:::

<!-- ::: {style="text-align: left; position: absolute; left: 25%; top: 50%; width: 1200px; transform: translate(-50%, -50%)"} -->
<!-- [Date & Time:]{style="color: black; font-size: 35px; font-weight: bold;"} -->
<!-- ::: -->
::: {style="text-align: left; position: absolute; right: 0%; top: 93%; transform: translate(-50%, -50%)"}
[The 15th of May 2025]{style="color: black; font-size: 50px;"}
:::

<!-- ::: {style="text-align: left; position: absolute; left: 25%; top: 53%; width: 1200px; transform: translate(-50%, -50%)"} -->
<!-- [Location: ]{style="color: black; font-size: 35px; font-weight: bold;"} -->
<!-- ::: -->
<!-- ::: {style="text-align: left; position: absolute; left: 40%; top: 53%; width: 1200px; transform: translate(-50%, -50%)"} -->
<!-- [Amphitéatre Pasteur, Nantes Université (France)]{style="color: black; font-size: 35px;"} -->
<!-- ::: -->

::: {style="text-align: left; position: absolute; left: 25%; top: 50%; width: 1200px; transform: translate(-50%, -50%)"}
[Thesis supervisor: ]{style="color: black; font-size: 35px; font-weight: bold;"}
:::
::: {style="text-align: left; position: absolute; left: 40%; top: 50%; width: 1200px; transform: translate(-50%, -50%)"}
[Laurent Barillé, Professor]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 25%; top: 53%; width: 1200px; transform: translate(-50%, -50%)"}
[Co-supervisor: ]{style="color: black; font-size: 35px; font-weight: bold;"}
:::
::: {style="text-align: left; position: absolute; left: 40%; top: 53%; width: 1200px; transform: translate(-50%, -50%)"}
[Pierre Gernez, Lecturer]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 25%; top: 59%; width: 1200px; transform: translate(-50%, -50%)"}
[Jury members:]{style="color: black; font-size: 35px; font-weight: bold;"}
:::

::: {style="text-align: left; position: absolute; left: 28%; top: 64%; width: 1200px; transform: translate(-50%, -50%)"}
[Antoine Collin]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 28%; top: 69%; width: 1200px; transform: translate(-50%, -50%)"}
[Rodney Forster]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 28%; top: 74%; width: 1200px; transform: translate(-50%, -50%)"}
[Evangelos Spyrakos]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 28%; top: 79%; width: 1200px; transform: translate(-50%, -50%)"}
[Bárbara Ondiviela]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 28%; top: 84%; width: 1200px; transform: translate(-50%, -50%)"}
[Federica Braga]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 28%; top: 89%; width: 1200px; transform: translate(-50%, -50%)"}
[Laurent Barillé]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 28%; top: 94%; width: 1200px; transform: translate(-50%, -50%)"}
[Pierre Gernez]{style="color: black; font-size: 35px;"}
:::


::: {style="text-align: left; position: absolute; left: 43%; top: 64%; width: 1200px; transform: translate(-50%, -50%)"}
[Lecturer]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 43%; top: 69%; width: 1200px; transform: translate(-50%, -50%)"}
[Professor]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 43%; top: 74%; width: 1200px; transform: translate(-50%, -50%)"}
[Professor]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 43%; top: 79%; width: 1200px; transform: translate(-50%, -50%)"}
[Senior scientist]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 43%; top: 84%; width: 1200px; transform: translate(-50%, -50%)"}
[Senior Researcher]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 43%; top: 89%; width: 1200px; transform: translate(-50%, -50%)"}
[Professor]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 43%; top: 94%; width: 1200px; transform: translate(-50%, -50%)"}
[Lecturer]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 58%; top: 64%; width: 1200px; transform: translate(-50%, -50%)"}
[École Pratique des Hautes Études (EPHE), Dinard, France]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 58%; top: 69%; width: 1200px; transform: translate(-50%, -50%)"}
[University of Hull, United Kingdom]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 58%; top: 74%; width: 1200px; transform: translate(-50%, -50%)"}
[University of Stirling, United Kingdom]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 58%; top: 79%; width: 1200px; transform: translate(-50%, -50%)"}
[Universidad de Cantabria, Spain]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 58%; top: 84%; width: 1200px; transform: translate(-50%, -50%)"}
[CNR-ISMAR, Venice, Italy]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 58%; top: 89%; width: 1200px; transform: translate(-50%, -50%)"}
[Nantes Université, France]{style="color: black; font-size: 35px;"}
:::

::: {style="text-align: left; position: absolute; left: 58%; top: 94%; width: 1200px; transform: translate(-50%, -50%)"}
[Nantes Université, France]{style="color: black; font-size: 35px;"}
:::


::: {.absolute top="65%" right="-10%" style="transform: translate(-50%, -50%);"}
![](Images/Profile_SImon.png){height="600"}
:::

::: {.gradient_box style="text-align: center; position: absolute; right: -3%; top: 86%; width: 500px; transform: translate(-50%, -50%)"}
[Simon Oiry]{style="color: black; font-size: 60px; line-height: 1em; margin: 0px; text-align: justify-all;"}
:::

::: {.absolute top="10%" left="5%" style="transform: translate(-50%, -50%);"}
![](Images/nantes-universite.png){height="300"}
:::

::: {.absolute top="10%" right="-5%" style="transform: translate(-50%, -50%);"}
![](Images/rsbe2.png){height="300"}
:::

::: {.absolute top="10%" left="50%" style="transform: translate(-50%, -50%);"}
![](Images/LogoED.png){height="150"}
:::

## Preface {data-state="hide-menubar"}

::: {.notes}
Between 2021 & 2024

BiCOME: Developing tools for biodiversity monitoring

REWRITE: Ongoing, Founded by Europe, Rewilding of intertidal areas accross Europe

InvaSea: Ongoing, Mapping of Invasive macroalgae, focusing on *G. vermiculophylla*

:::

::: {.fragment .fade-out fragment-index="2"}
::: {.absolute bottom="0%" left="0%"}
![](Images/Preface/Photo_Labo.jpg){height="1200"}
:::

::: {.absolute top="3%" right="0%"}
![](Images/Preface/logo_footer_UN.png){height="200"}
:::

::: {.absolute top="0%" left="30%" }
![](Images/Preface/Boutons_Laboratoires_Isomer.png){height="300"}
:::



::: {.absolute style="text-align: center; position: absolute; left: 48%; top: 47%; width: 1000px; transform: translate(-50%, -50%)"}
[Remote Sensing, Benthic Ecology and Ecotoxicology]{style="color: black; font-size: 80px; font-weight: bold; line-height: 1em; margin: 0px; text-align: justify-all;"}
:::

::: {.absolute top="25%" right="0%" }
![](Images/Preface/rsbe2.png){height="500"}
:::

::: {.absolute left="25%" top="65%" style="font-size: 50px; width: 900px;"}
- Benthic ecology and shellfish aquaculture
- Biodiversity of benthic primary producers
- Hyperspectral, multispectral and drone remote sensing
:::

::: {.absolute right="-5%" top="65%" style="font-size: 50px; width: 900px;"}
- Ecotoxicology and emerging pollutants
- Marine optics and ocean colour remote sensing
:::
:::

::: {.watercolor-container .fragment .fade-in fragment-index="2"}

![](Images/Preface/Watercolor_background.png){.watercolor-img}

::: {.watercolor-text}
PhD related projects
:::

:::

::: {.absolute .fragment .fade-in fragment-index="3" left="2%" top="0%" style="opacity: 0.2;"}

![](Images/Preface/Watercolor_background_green.png){height="1200"}
:::

::: {.absolute .fragment .fade-in fragment-index="3" left="1%" top="2%" style="z-index: -1;"}

![](Images/Others/BiCOME Logo.png){height="300"}
:::

::: {.absolute .fragment .fade-in fragment-index="3" left="12%" top="10%" style="font-size: 50px;"}
BiCOME Project
:::

::: {.absolute .fragment .fade-in fragment-index="3" left="15%" top="15%" style="font-size: 30px;"}
2021-2024
:::

::: {.absolute .fragment .fade-in fragment-index="3" width="600" left="5%" top="25%" style="font-size: 40px;"}
- Develop Observation tools
- Assess impacts of land/sea use, pollution and climate change
- identify regions of resilience or sensitivity
:::

::: {.absolute .fragment .fade-in fragment-index="3" left="10%" top="52%" style="font-size: 40px;"}
Project funded by:
:::

::: {.absolute .fragment .fade-in fragment-index="3" left="11%" top="55%"}
![](Images/Preface/ESA_Logo.png){height="350"}
:::


::: {.absolute .fragment .fade-in fragment-index="4" right="0%" top="0%" style="opacity: 0.2;"}

![](Images/Preface/Watercolor_background_yellow.png){height="1200"}
:::

::: {.absolute .fragment .fade-in fragment-index="4" right="-2%" top="2%"}

![](Images/Preface/rewrite-logo.png){height="100"}
:::

::: {.absolute .fragment .fade-in fragment-index="4" right="12%" top="10%" style="font-size: 50px;"}
REWRITE Project
:::

::: {.absolute .fragment .fade-in fragment-index="4" right="15%" top="15%" style="font-size: 30px;"}
2024-Actual
:::

::: {.absolute .fragment .fade-in fragment-index="4" width="600" right="5%" top="25%" style="font-size: 40px;"}
Aims to revitalize Europe's intertidal areas through rewilding, promoting climate resilience, biodiversity, and societal benefits along the European shoreline.
:::

::: {.absolute .fragment .fade-in fragment-index="4" right="10%" top="50%" style="font-size: 40px;"}
Project funded by:
:::

::: {.absolute .fragment .fade-in fragment-index="4" right="9%" top="55%"}
![](Images/Preface/EU_Logo.png){height="180"}
:::

::: {.absolute .fragment .fade-in fragment-index="5" left="30%" bottom="0%" style="opacity: 0.2;"}

![](Images/Preface/Watercolor_background_red.png){height="650"}
:::

::: {.absolute .fragment .fade-in fragment-index="5" left="30%" top="52%" style="font-size: 50px;"}
InvaSea Project
:::

::: {.absolute .fragment .fade-in fragment-index="5" left="33%" top="57%" style="font-size: 30px;"}
2024-Actual
:::

::: {.absolute .fragment .fade-in fragment-index="5" width="800" left="35%" top="62%" style="font-size: 40px;"}
- Assessing the Capacity of Remote Sensing to Map Invasive Red Algae
- Mapping *G. vermiculophylla* along the French coastline
:::

::: {.absolute .fragment .fade-in fragment-index="5" left="30%" top="80%" style="font-size: 40px;"}
Project funded by:
:::

::: {.absolute .fragment .fade-in fragment-index="5" left="50%" top="75%"}
![](Images/Preface/cnes_logo.png){height="300"}
:::

<!-- - thesis took place in ISOMER Nantes between 2021 and 2024 -->
<!-- - It has been found by the french government blabla -->
<!-- - It was closely related to a ESA founded project called BiCOME -->


## Table of Contents {.toc-page data-state="hide-menubar"}
<!-- <ul class="menu"></ul> -->
- [Introduction](#introduction)
- [Challenges and Solutions](#developing-advanced-methodologies-for-intertidal-vegetation-monitoring)
    - From Hyperspectral to Multispectral Resolution
    - Building of a Neural Network model for Intertidal Vegetation Mapping (DISCOV) 
- [Invasive Species](#case-study-1-facing-biological-invasions)
- [Marine Heatwaves](#case-study-2-mapping-the-impact-of-heatwaves-on-intertidal-seagrasses)
- [Discussion](#discussion-and-overview)



# Introduction {data-stack-name="Introduction" background-image="Images/Intro/title_background.png"}
- [Coastal Environments](#coastal-environments)
- [Human Activities](#human-activities)
- [Environmental Impacts](#environmental-impacts)
- [Interidal Habitats](#intertidal-habitats)
- [Remote Sensing](#remote-sensing) 
- [Objectives of this work](#objectives-of-this-work)

## Coastal Environments

::: {.absolute top="6.5%"}
*Areas where the land masses meet the seas*
:::

::: {.notes}
1st: Map of Brittany, North West of France
2nd: Map of Bourgneuf Bay, near Nantes

:::

```{r map dens_pop}
#| cache: true
#| echo: false
#| eval: false
#| warning: false

library(sf)
library(tidyverse)

TDC <- read_sf("Data/Intro/Trait_de_cote.shp")
coms <- read_sf("Data/Intro/commune.shp")
coms_buf_50km <- read_sf("Data/Intro/Coms_50km.shp")
coms_buf_25km <- read_sf("Data/Intro/Coms_25km.shp")

TDC_buf <- st_buffer(TDC, dist = 10)

x_ref <- 403256
y_ref <- 6511916

#### COMS ####
centroids <- st_centroid(coms)
coords <- st_coordinates(centroids)
top_left <- coords[,1] < x_ref & coords[,2] > y_ref
coms_cropped <- coms[top_left, ]

#### COMS 50km####
centroids <- st_centroid(coms_buf_50km)
coords <- st_coordinates(centroids)
top_left <- coords[,1] < x_ref & coords[,2] > y_ref
coms_50km_cropped <- coms_buf_50km[top_left, ]

#### COMS 25km####
centroids <- st_centroid(coms_buf_25km)
coords <- st_coordinates(centroids)
top_left <- coords[,1] < x_ref & coords[,2] > y_ref
coms_25km_cropped <- coms_buf_25km[top_left, ]

if(file.exists("Data/Intro/Coms_on_the_sea.shp")){
  Coms_on_the_sea<- read_sf("Data/Intro/Coms_on_the_sea.shp")

}else{
  intersects <- st_intersects(coms_cropped, TDC_buf, sparse = FALSE)
  Coms_on_the_sea <- coms_cropped[apply(intersects, 1, any), ]
  
  write_sf(Coms_on_the_sea.shp, "Data/Intro/Coms_on_the_sea.shp")  
}


nantes_lonlat <- st_sfc(st_point(c(-1.5536, 47.2184)), crs = 4326)
nantes_l93 <- st_transform(nantes_lonlat, crs = 2154)  # Lambert-93


plot_France <- ggplot() +
  geom_sf(data = coms_cropped, fill = "#89a979", color = "#89a979") + 
    geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
  # geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") + 
  # selected polygons
  coord_sf(expand = F)+
  theme_void()

plot_coms_by_the_sea <- ggplot() +
  geom_sf(data = coms_cropped, fill = "#89a979", color = "#89a979") +  # original polygons (lighter)
  geom_sf(data = Coms_on_the_sea, fill = "#596f50", color = "#596f50") + 
  geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +

  # selected polygons
  coord_sf(expand = F)+
  theme_void()

colscale <- c("50km" = "#7f9a6f", "25km" = "#739069", "0km"="#596f50" )

plot_bands <- ggplot() +
  geom_sf(data = coms_cropped, fill = "#89a979", color = "#89a979") +  
  geom_sf(data = coms_50km_cropped, aes(fill = "50km", color = "50km"),show.legend = F) + 
  geom_sf(data = coms_25km_cropped, aes(fill = "25km", color = "25km"),show.legend = F) + 
  geom_sf(data = Coms_on_the_sea, aes(fill = "0km", color = "0km"),show.legend = F) +
  scale_fill_manual(values = colscale)+
  scale_color_manual(values = colscale)+
  geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +

  # selected polygons
  coord_sf(expand = F)+
  theme_void()

ggsave("Images/Intro/Coms_France.png", plot_France, height=1350*4, width = 950*4, units = "px")

ggsave("Images/Intro/Coms_by_the_Sea.png", plot_coms_by_the_sea, height=1350*4, width = 950*4, units = "px")

ggsave("Images/Intro/Coms_bands.png", plot_bands, height=1350*4, width = 950*4, units = "px")

dens_pop_map <- ggplot() +
  geom_sf(data = coms_cropped, aes(color = dens_pop, fill = dens_pop)) +
  # scale_fill_manual(values = colscale)+
  # scale_color_manual(values = colscale)+
  geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
  # tidyterra::scale_fill_grass_c(palette = "batlow", use_grass_range = F,limits = c(1, 6000), trans = "log10")+
  # tidyterra::scale_color_grass_c(palette = "batlow", use_grass_range = F,limits = c(1, 6000), trans = "log10")+
  scico::scale_fill_scico(name = "People/km²",palette = "vik", limits = c(1, 4000), trans = "log10")+
  scico::scale_color_scico(name = "People/km²",palette = "vik", limits = c(1, 4000), trans = "log10")+
  # selected polygons
  coord_sf(expand = F)+
  theme_void() +
  theme(
    legend.position = c(0.25, 0.25),
    legend.key.height = unit(2, "cm"),    # taller legend
    legend.text = element_text(size = 20),  # bigger numbers
    legend.title = element_text(size = 22, face = "bold") # bigger title
  )

ggsave("Images/Intro/dens_pop_map.png", dens_pop_map, height=1350*4, width = 950*4, units = "px")

```

::: {.fragment .fade-out fragment-index="3"}
::: {.absolute bottom="-3%" right="-11%"}
![](Images/Intro/Coms_France.png){height="1350"}
:::
:::

::: {.absolute bottom="-3%" right="-11%" .fragment .fade-in-then-out fragment-index="1"}
![](Images/Intro/Coms_by_the_Sea.png){height="1350"}
:::

::: {.absolute bottom="-3%" right="-11%" .fragment .fade-in-then-out fragment-index="2"}
![](Images/Intro/Coms_bands.png){height="1350"}
:::

::: {.absolute bottom="-3%" right="-11%" .fragment .fade-in fragment-index="3"}
![](Images/Intro/dens_pop_map.png){height="1350"}
:::

::: {.absolute bottom="3%" left="5%" .fragment .fade-in fragment-index="4"}
![](Images/Intro/CoastalPopulation.png){height="700"}
:::

::: {.fragment .fade-out fragment-index="3"}
::: {.absolute .fragment .fade-in fragment-index="1" left="10%" top="15%" style="font-size: 50px; width: 900px; color: #596f50;"}
- Directly in contact with the sea
:::

::: {.absolute .fragment .fade-in fragment-index="2" left="10%" top="21%" style="font-size: 50px; width: 900px; color: #739069;"}
- 25km away from the sea
:::

::: {.absolute .fragment .fade-in fragment-index="2" left="10%" top="27%" style="font-size: 50px; width: 900px; color: #7f9a6f;"}
- 50km away from the sea
:::
:::

::: {.absolute left="0%" top="15%" .fragment .fade-in fragment-index="3" style="font-size: 50px;"}
-   French Coast are densly populated:
:::

::: {.absolute .fragment .fade-in fragment-index="3" left="10%" top="21%" style="font-size: 40px;"}
-   4% of the french territory
:::

::: {.absolute .fragment .fade-in fragment-index="3" left="10%" top="27%" style="font-size: 40px;"}
-   10% of the french population
:::

::: {.absolute left="0%" top="35%" .fragment .fade-in fragment-index="4" style="font-size: 50px;"}
-   Globaly: 
:::

::: {.absolute left="30%" bottom="0%" .fragment .fade-in fragment-index="4" style="font-size: 30px;"}
*Source:* [*Cosby et al. (2024)*](https://doi.org/10.1038/s41598-024-73287-x) *,* [*Reimann et al., (2023)*](https://doi.org/10.1017/cft.2023.3) 
:::

::: {.absolute left="30%" bottom="45%" .fragment .fade-in fragment-index="4" style="font-size: 40px;"}
1 billion people (15%) within 10km (4%)
:::

::: {.absolute left="30%" bottom="40%" .fragment .fade-in fragment-index="4" style="font-size: 40px;"}
~3 billion by 2100
:::

## Human activities {data-transition="fade"}

::: {.absolute top="6.5%"}
*Hotspots of Economic Growth*
:::


::: {.notes}

These economic activities also come with environmental costs, impacting habitats, water quality, and marine life
:::

::: {.absolute right="0%" top="0%" style="font-size: 30px; color: black; z-index: 9999;"}
[*source: developpement-durable.gouv.fr*](https://www.geolittoral.developpement-durable.gouv.fr/telechargement-en-ligne-donnees-geolittoral-a802.html)
:::

```{r maps coastal activities}
#| cache: true
#| echo: false
#| eval: false
#| warning: false

library(sf)
library(tidyverse)

coms <- read_sf("Data/Intro/commune.shp")


# Create bounding box as an sf object
bbox <- st_as_sfc(st_bbox(c(xmin = 252579, xmax = 323049,
                            ymin = 6655218, ymax = 6708566),
                          crs = st_crs(coms)))
cropped_coms <- st_intersection(coms, bbox)

dragage <- read_sf("Data/Intro/N_zones_homogenes_dragage_S_metropole_EPSG2154.shp")%>% 
  st_transform(st_crs(cropped_coms)) %>% 
  st_intersection(bbox) 

Port <- read_sf("Data/Intro/N_carenage_P_epsg3857_20220630.shp") %>% 
  st_transform(st_crs(cropped_coms))%>% 
  st_intersection(bbox) 

Immersion_sed <- read_sf("Data/Intro/N_immersion_S_metropole_epsg2154_2005-2020.shp") %>% 
  st_transform(st_crs(cropped_coms))%>% 
  st_intersection(bbox) 

Aquaculture <- read_sf("Data/Intro/cadastre_emprise_2025.shp") %>% 
  st_transform(st_crs(cropped_coms))%>% 
  st_intersection(bbox)

Eol <- read_sf("Data/Intro/parc_emr_autorise_en_projet.shp") %>% 
  st_transform(st_crs(cropped_coms))%>% 
  st_intersection(bbox)

Ouvrage <- read_sf("Data/Intro/N_ouvrages_littoraux_metropole_epsg2154_L.shp") %>% 
  st_transform(st_crs(cropped_coms))%>% 
  st_intersection(bbox)
  
# Crop the polygon with the bounding box

plot <- ggplot() +
  geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") + 
    # geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
  # geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") + 
  # selected polygons
  coord_sf(expand = F)+
  theme_void()

ggsave("Images/Intro/Map_BB.png", plot, width = 10, height=8.12, dpi=150)


plot_port <- ggplot() +
  geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
  geom_sf(data = Port, color = "darkred") +
    # geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
  # geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") + 
  # selected polygons
  coord_sf(expand = F)+
  theme_void()

ggsave("Images/Intro/Map_BB_port.png", plot_port, width = 10, height=8.12, dpi=150)


plot_dragage <- ggplot() +
  geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
  geom_sf(data = Port, color = "darkred") +
  geom_sf(data = dragage, color = "goldenrod3", fill = "goldenrod3") +
  geom_sf(data = Immersion_sed, color = "goldenrod3", fill = "goldenrod3") +

    # geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
  # geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") + 
  # selected polygons
  coord_sf(expand = F)+
  theme_void()

ggsave("Images/Intro/Map_BB_dragage.png", plot_dragage, width = 10, height=8.12, dpi=150)

plot_aquaculture <- ggplot() +
  geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
  geom_sf(data = Port, color = "darkred") +
  geom_sf(data = dragage, color = "goldenrod3", fill = "goldenrod3") +
  geom_sf(data = Immersion_sed, color = "goldenrod3", fill = "goldenrod3") +
  geom_sf(data = Aquaculture, color = "darkblue", fill = "darkblue") +

    # geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
  # geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") + 
  # selected polygons
  coord_sf(expand = F)+
  theme_void()

ggsave("Images/Intro/Map_BB_Aquaculture.png", plot_aquaculture, width = 10, height=8.12, dpi=150)

plot_Eol <- ggplot() +
  geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
  geom_sf(data = Port, color = "darkred") +
  geom_sf(data = dragage, color = "goldenrod3", fill = "goldenrod3") +
  geom_sf(data = Immersion_sed, color = "goldenrod3", fill = "goldenrod3") +
  geom_sf(data = Aquaculture, color = "darkblue", fill = "darkblue") +
  geom_sf(data = Eol, color = "darkgreen", fill = "darkgreen") +

    # geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
  # geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") + 
  # selected polygons
  coord_sf(expand = F)+
  theme_void()

ggsave("Images/Intro/Map_BB_Eol.png", plot_Eol, width = 10, height=8.12, dpi=150)

plot_ouvrage <- ggplot() +
  geom_sf(data = cropped_coms, fill = "#89a979", color = "#89a979") +
  geom_sf(data = Port, color = "darkred") +
  geom_sf(data = dragage, color = "goldenrod3", fill = "goldenrod3") +
  geom_sf(data = Immersion_sed, color = "goldenrod3", fill = "goldenrod3") +
  geom_sf(data = Aquaculture, color = "darkblue", fill = "darkblue") +
  geom_sf(data = Eol, color = "darkgreen", fill = "darkgreen") +
  geom_sf(data = Ouvrage, color = "black", fill = "black", linewidth = 2) +

    # geom_sf(data = nantes_l93, fill = "red", color = "black",shape = 21,size = 8) +
# original polygons (lighter)
  # geom_sf(data = intersecting_polygons, fill = "#6e8962", color = "#6e8962") + 
  # selected polygons
  coord_sf(expand = F)+
  theme_void()

ggsave("Images/Intro/Map_BB_ouvrage.png", plot_ouvrage, width = 10, height=8.12, dpi=150)


```

::: {.absolute bottom="-6%" right="-11%"}
![](Images/Intro/Map_BB.png){height="1400"}
:::

::: {.absolute bottom="-6%" right="-11%" .fragment .fade-in-then-out fragment-index="1"}
![](Images/Intro/Map_BB_port.png){height="1400"}
:::

::: {.absolute bottom="-6%" right="-11%" .fragment .fade-in-then-out fragment-index="2"}
![](Images/Intro/Map_BB_dragage.png){height="1400"}
:::

::: {.absolute bottom="-6%" right="-11%" .fragment .fade-in-then-out fragment-index="3"}
![](Images/Intro/Map_BB_Aquaculture.png){height="1400"}
:::

::: {.absolute bottom="-6%" right="-11%" .fragment .fade-in-then-out fragment-index="4"}
![](Images/Intro/Map_BB_Eol.png){height="1400"}
:::

::: {.absolute bottom="-6%" right="-11%" .fragment .fade-in fragment-index="5"}
![](Images/Intro/Map_BB_ouvrage.png){height="1400"}
:::

::: {.absolute top="15%" left="0%" .fragment .fade-in fragment-index="1"}
![](Images/Intro/Seaport.png){height="500"}
:::

::: {.absolute top="55%" left="0%" .fragment .fade-in fragment-index="2"}
![](Images/Intro/Dragage.png){height="500"}
:::

::: {.absolute top="15%" left="21%" .fragment .fade-in fragment-index="3"}
![](Video/Intro/Oyster_farm.mp4){height="525"}
:::

::: {.absolute top="55%" left="21%" .fragment .fade-in fragment-index="4"}
![](Images/Intro/Eolienne.png){height="500"}
:::

::: {.absolute top="15%" left="42%" .fragment .fade-in fragment-index="5"}
![](Images/Intro/Gois.png){height="500"}
:::

::: {.absolute left="6%" top="11%" .fragment .fade-in fragment-index="1" style="font-size: 50px; color: #78170e;"}
Seaport
:::

::: {.absolute left="5%" bottom="0%" .fragment .fade-in fragment-index="2" style="font-size: 50px; color: #a98a36;"}
Dredging
:::

::: {.absolute left="26%" top="11%" .fragment .fade-in fragment-index="3" style="font-size: 50px; color: #130985;"}
Aquaculture
:::

::: {.absolute left="23%" bottom="0%" .fragment .fade-in fragment-index="4" style="font-size: 50px; color: #31621a;"}
Energy Production
:::

::: {.absolute left="46%" top="11%" .fragment .fade-in fragment-index="5" style="font-size: 50px; color: black;"}
Artificialization
:::

::: {.absolute left="43%" top="56%" .fragment .fade-in fragment-index="6" style="font-size: 50px; color: black;"}
- Fishing activities
- Tourism
- Industries
- ...
:::



## Environmental Impacts {data-transition="fade"}
::: {.absolute top="6.5%"}
*The mark of human activity on nature*
:::

::: {.absolute right="0%" top="0%" style="font-size: 30px; color: black; z-index: 9999;"}
[*developpement-durable.gouv.fr*](https://www.geolittoral.developpement-durable.gouv.fr/telechargement-en-ligne-donnees-geolittoral-a802.html)
:::

::: {.absolute bottom="-6%" right="-11%"}
![](Images/Intro/Map_BB_ouvrage.png){height="1400"}
:::

::: {.absolute top="15%" left="0%"}
![](Images/Intro/Spills.png){height="500"}
:::

::: {.absolute top="55%" left="0%"}
![](Images/Intro/Erosion.png){height="500"}
:::

::: {.absolute top="15%" left="21%"}
![](Video/Intro/Oyster_reef2.mp4){height="525"}
:::

::: {.absolute top="55%" left="21%"}
![](Images/Intro/energy.png){height="500"}
:::

::: {.absolute top="15%" left="42%"}
![](Images/Intro/habitat_destruction.png){height="500"}
:::

::: {.absolute left="6%" top="11%" style="font-size: 50px; color: #78170e;"}
Oil spills
:::

::: {.absolute left="5%" bottom="0%" style="font-size: 50px; color: #a98a36;"}
Erosion
:::

::: {.absolute left="19%" top="11%" style="font-size: 50px; color: #130985;"}
Alien Species Introduction
:::

::: {.absolute left="23%" bottom="0%" style="font-size: 50px; color: #31621a;"}
Energy introduction
:::

::: {.absolute left="43%" top="11%" style="font-size: 50px; color: black;"}
Habitat destruction
:::

::: {.absolute left="43%" top="56%" style="font-size: 50px; color: black;"}
- Fishing activities
- Pollutions
- ...
:::

## Intertidal habitats

::: {.absolute top="6.5%"}
*Living on the edge of land and sea*
:::

::: {.notes}
... and many more habitats like Coralline algal reefs or Cobble or gravel beaches

Seagrass: Blue Carbon Habitat
Hypocamp of the Gulf of Morbihan 
Dugong of the Indo-Pacific
Brent Goose of Noirmoutier

Green and red algae, nutrient sequestration, but can be a threat for ecosystems
:::

::: {.fragment .fade-out fragment-index="1"}
::: {.absolute top="17%" left="0%"}
![](Images/Intro/saltmarsh.jpg){height="500"}
:::

::: {.absolute top="17%" left="28%"}
![](Images/Intro/mangroves.jpg){height="500"}
:::

::: {.absolute top="17%" left="59%"}
![](Images/Intro/polychaete_reef.jpg){height="500"}
:::

::: {.absolute bottom="3%" left="39%"}
![](Images/Intro/mudflat.png){height="500"}
:::

::: {.absolute bottom="3%" left="67.2%"}
![](Images/Intro/Oyster_reefs.png){height="500"}
:::

::: {.absolute bottom="3%" left="0%"}
![](Images/Intro/DJI_0485.png){height="500"}
:::

::: {.absolute left="1%" top="19%" style="font-size: 40px; color: black;"}
Saltmarshes
:::

::: {.absolute left="29%" top="19%" style="font-size: 40px; color: white;"}
Mangroves
:::

::: {.absolute left="60%" top="19%" style="font-size: 40px; color: black;"}
Polychaete reefs
:::

::: {.absolute left="1%" top="57%" style="font-size: 40px; color: black;"}
Rocky reefs
:::

::: {.absolute left="40%" top="89%" style="font-size: 40px; color: white;"}
Tidal flats
:::

::: {.absolute left="68.2%" top="57%" style="font-size: 40px; color: black;"}
Oyster reefs
:::

::: {.absolute bottom="0%" right="6%"}
*A rich variety of intertidal habitats*
:::
:::

::: {.fragment .fade-out fragment-index="4"}
::: {style="position:absolute; top:10%; left:0%; transition: top 1s ease;" .fragment .fade-in fragment-index="1"}
::: {.absolute bottom="-5%" .fragment .fade-out fragment-index="2"}
Soft-bottom substrats
:::
::: {.absolute bottom="-2%" right="7%" style="font-size: 30px;"}
*Guadalquivir River, Spain*
:::
![](Video/Intro/soft_bottom.mp4){height="650"}

::: {.absolute left="60%" top="110%" .fragment .fade-in-then-out fragment-index="2"}
- A - Magnoliopsida
- B - Bacillariophyceae
- C - Phaeophyceae
- D - Florideophyceae
- E - Chlorophyceae
:::

::: {.absolute left="5%" top="115%" .fragment .fade-in-then-out fragment-index="2" style="font-size: 60px;"}
Five Taxonomic Classes
:::

::: {.absolute left="14%" top="125%" .fragment .fade-in-then-out fragment-index="2" style="font-size: 60px;"}
of Vegetation
:::

:::
:::

::: {.absolute top="10%" right="0%" .fragment .fade-in-then-out fragment-index="1"}
::: {.absolute bottom="-5%"}
Hard-bottom substrats
:::
::: {.absolute bottom="-2%" right="7%" .fragment .fade-out fragment-index="2" style="font-size: 30px;"}
*Vigo, Spain*
:::
![](Video/Intro/site_2_vigo_1bis.mp4){height="650"}
:::

::: {.absolute top="0%" right="10%" .fragment .fade-in-then-out fragment-index="2"}
![](Images/Intro/Figs_vegetations.png){height="1370"}
:::

::: {.fragment .fade-out fragment-index="7"}

::: {.absolute top="5%" left="48%" .fragment .fade-in fragment-index="3"}
::: {.absolute top="-5%" right="10%" style="font-size: 30px; color: black;"}
[*Hope et al. 2019*](https://doi.org/10.1111/1365-2745.13322)
:::

![](Images/Intro/MPB-Biofilm.jpg){height="500"}

:::

::: {style="position:absolute; top:10%; left:0%;" .fragment .fade-in fragment-index="4"}
![](Images/Intro/Carbon_seagrass.jpg){height="650"}
:::

::: {.absolute top="5%" right="16%" .fragment .fade-in fragment-index="5"}
![](Images/Intro/seagrass_hypo.png){height="500"}
:::

::: {.absolute top="5%" right="0%" .fragment .fade-in fragment-index="5"}
![](Images/Intro/seagrass_dugong.png){height="500"}
:::

::: {.absolute top="59%" left="22.7%" .fragment .fade-in fragment-index="5"}
![](Images/Intro/bernache_seagrass.png){height="462"}
:::

::: {.absolute top="43%" right="-2%" .fragment .fade-in fragment-index="6"}
::: {.absolute bottom="-3%" right="8%" style="font-size: 30px; color: black;"}
*Saja estuary, Spain*
:::

![](Video/Intro/Santander_green_and_red_algae.mp4){height="730"}
:::

::: {.absolute left="1%" top="60%" .fragment .fade-in fragment-index="3" style="font-size: 60px;"}
Ecosystem Services
:::

::: {.absolute left="2%" top="65%" .fragment .fade-in fragment-index="3"}
- Protection against Erosion
:::

::: {.absolute left="2%" top="70%" .fragment .fade-in fragment-index="4"}
- Carbon fixation
:::

::: {.absolute left="2%" top="75%" .fragment .fade-in fragment-index="5"}
- Nursery & Shelter
:::

::: {.absolute left="2%" top="80%" .fragment .fade-in fragment-index="6"}
- Nutrient Fixation
:::
:::

::: {.absolute left="2%" top="15%" .fragment .fade-in fragment-index="7" style="font-size: 60px;"}
~ $30 trillion per year 
:::

::: {.absolute left="2%" top="25%" .fragment .fade-in fragment-index="7" style="font-size: 50px;"}
Protect these ecosystems:
:::

::: {.absolute left="5%" top="30%" .fragment .fade-in fragment-index="7" style="font-size: 50px;"}
  - Habitat Directive (1992)
  - Water framework Directive (2001)
  - Marine Strategy Framework Directive (2008)
  - Birds Directive (2009)
  - Nature Restoration Law (2024)
:::

::: {.absolute right="0%" bottom="0%" .fragment .fade-in fragment-index="7" style="font-size: 30px;"}
[Source: Koundouri et al., 2023](https://doi.org/10.3389/frevc.2023.1160118)
:::

::: {.absolute left="45%" top="10%" .fragment .fade-in fragment-index="7"}
![](Images/Intro/MSFD-logo.jpg){height="500"}
:::

::: {.absolute left="70%" top="0%" .fragment .fade-in fragment-index="7"}
![](Images/Intro/Natura2000.png){height="500"}
:::

::: {.absolute left="2%" bottom="20%" .fragment .fade-in fragment-index="7" style="font-size: 55px;"}
Good knowledge and monitoring to inform policies
:::

::: {.absolute right="0%" bottom="5%" .fragment .fade-in fragment-index="7"}
![](Images/Intro/NatureRestorationLax.png){height="500"}
:::





## Remote Sensing  {auto-animate=true transition="slide-in fade-out"}
::: {.absolute top="6.5%" .fragment .fade-out fragment-index="2"}
*A tool to map them all !*
:::


::: {.absolute top="-4%" right="-10%" }
<video src="Video/Intro/Oyster_reef_intertidal1.mp4" height="1450" autoplay loop muted playsinline></video>
:::

::: {.absolute top="-4%" right="-10%" .fragment .fade-in fragment-index="1"}
<video src="Video/Intro/Drone_Flight.mp4" height="1450" autoplay loop muted playsinline></video>
:::

::: {.absolute .fragment .fade-out fragment-index="2" left="2%" top="15%" style="font-size: 50px;"}
Traditional sampling methods: 
:::

::: {.absolute .fragment .fade-out fragment-index="2" left="5%" top="20%"}
  - Expensive
  - Time consuming
  - Low extent and temporal resolution
  - Hard to access
:::

::: {.absolute .fragment .fade-in-then-out fragment-index="1" left="2%" top="45%" style="font-size: 50px;"}
Remote Sensing: 
:::

::: {.absolute .fragment .fade-in-then-out fragment-index="1" left="5%" top="50%"}
  - Cost effective
  - Good coverage/Time ratio
  - Synchronous broad-scale view
  - Simplifies the field work
:::

::: {.absolute top="6.5%" .fragment .fade-in fragment-index="2"} 
*From the sky to the sea *
:::

::: {.absolute top="15%" .fragment .fade-in fragment-index="2"} 
The science of obtaining information about objects or areas from a distance
:::


::: {.absolute top="22%" left="0%" .fragment .fade-in fragment-index="2"}
![](Images/Intro/eyes.png){height="400" .circular-fade}
:::

::: {.absolute top="22%" left="17%" .fragment .fade-in fragment-index="2"}
![](Images/Intro/Bats.png){height="400" .circular-fade}
:::

::: {.absolute top="22%" left="34%" .fragment .fade-in fragment-index="2" style="z-index: 9999;"}
![](Images/Intro/james_webb.png){height="400" .circular-fade}
:::

::: {.absolute top="22%" left="51%" .fragment .fade-in fragment-index="2"}
![](Images/Intro/IRM.png){height="400" .circular-fade}
:::

::: {.absolute top="59%" .fragment .fade-in fragment-index="3"} 
Applyed to Earth Observation: 
:::

::: {.absolute top="65%" left="0%" .fragment .fade-in fragment-index="3" data-id="box1" }
![](Images/Intro/Sentinel2_1.png){height="400" .circular-fade}
:::

::: {.absolute top="65%" left="17%" .fragment .fade-in fragment-index="3" data-id="box2" }
![](Images/Intro/Airbornn.png){height="400" .circular-fade}
:::

::: {.absolute top="65%" left="34%" .fragment .fade-in fragment-index="3" data-id="box3" }
![](Images/Intro/Drone_MPB1.png){height="400" .circular-fade}
:::

::: {.absolute top="65%" left="51%" .fragment .fade-in fragment-index="3" data-id="box4" }
![](Images/Intro/Bede_ASD.png){height="400" .circular-fade}
:::

## Remote Sensing  {auto-animate=true visibility="uncounted" transition="none"}

::: {.fragment .fade-out fragment-index="2"}
::: {.absolute top="6.5%"}
*From the sky to the sea *
:::

::: {.absolute top="20%" left="0%" data-id="box1" }
![](Images/Intro/Sentinel2_1.png){height="550" .circular-fade}
:::

::: {.absolute top="20%" left="24%" data-id="box3" }
![](Images/Intro/Drone_MPB1.png){height="550" .circular-fade}
:::



::: {.absolute top="10%" right="-0%" .fragment .fade-in fragment-index="1"}
![](Images/Intro/Satellite_resolution.png){height="1100"}
:::

::: {.absolute left="0%" top="65%" style="font-size: 40px;"} 
**Sentinel-2** 
:::
  
::: {.absolute left="25%" top="65%" style="font-size: 40px;"} 
**Drone**
:::
  
::: {.absolute left="1%" top="70%" style="font-size: 35px;"}

10–20 m resolution

100 000 km²/image

5-day revisit

:::
  
::: {.absolute left="26%" top="70%" style="font-size: 35px;"}

cm resolution

Adapted to small-scale studies

Flight planning flexibility
:::
:::

::: {.absolute top="6.5%" .fragment .fade-in-then-out fragment-index="2"}
*Fieldwork remains essential to make sense of what satellites see*
:::


::: {.absolute top="-3.5%" right="-10%" .fragment .fade-in-then-out fragment-index="2"}

<video src="Video/Intro/Fildwork_santander2.mp4" height="1450" autoplay loop muted playsinline></video>

:::

::: {.absolute top="15%" left="0%" .fragment .fade-in-then-out fragment-index="2"}
::: {.absolute bottom="-5%" left="30%"}
Radiometric calibration
:::
::: {.absolute top="-5%" right="10%" style="font-size: 25px;"}
*Aven, France*
:::



![](Images/Intro/Bede_asd1.jpg){height="450" .circular-fade}
:::

::: {.absolute top="15%" left="40%" .fragment .fade-in-then-out fragment-index="2"}
::: {.absolute bottom="-5%" left="25%"}
Ground truthing
:::
::: {.absolute top="-5%" right="10%" style="font-size: 25px;"}
*Noirmoutier, France*
:::



![](Images/Intro/Quadrats.jpg){height="450" .circular-fade}
:::

::: {.absolute top="60%" left="0%" .fragment .fade-in-then-out fragment-index="2"}
::: {.absolute bottom="-5%" left="10%"}
Features georeferencing
:::

::: {.absolute top="-5%" right="10%" style="font-size: 25px;"}
*Tainaron, Greece*
:::



![](Images/Intro/Greece_RTK.jpg){height="450" .circular-fade}
:::

::: {.absolute top="60%" left="27%" .fragment .fade-in-then-out fragment-index="2"}
::: {.absolute bottom="-5%" left="40%"}
Sampling
:::

::: {.absolute top="-5%" right="10%" style="font-size: 25px;"}
*Cadiz, Spain*
:::


![](Images/Intro/MPB_sampling.jpg){height="450" .circular-fade}
:::

::: {.absolute top="6.5%" .fragment .fade-in fragment-index="3"}
*Monitoring coastal change from space*
:::


```{r animation paper per year}
#| cache: true
#| echo: false
#| warning: false
#| eval: false


library(gganimate)
library(tidyverse)
library(Polychrome)  # if not installed

my_colors <- createPalette(24, seedcolors = c("#CC6677", "#4477AA"),range = c(60, 120))

df <- read.csv("Data/Intro/trend_paper_coastalRS.csv")%>%
  rename(Count = `Document.Count`, Year = `Publication.Year`, Type = `Document.Type`) 

year_breaks <- seq(1970, max(df$Year), by = 10)

# Match color palette to document types
type_levels <- unique(df$Type)
n_types <- length(type_levels)
type_colors <- setNames(my_colors[1:n_types], type_levels)

p <- df %>% 
  ggplot(aes(x = as.factor(Year), y = Count, fill = Type))+
  geom_col()+
  scale_fill_manual(values = type_colors) +
  scale_x_discrete(breaks = as.character(year_breaks)) +
  labs(x = "Year", y = "Number of Documents") +
  theme_minimal(base_size = 40) +  # Base size for all text
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    legend.position = c(0.2, 0.6)) +
  transition_reveal(as.integer(Year))

rendered <- animate(p, duration = 2, fps = 20, width = 1920, height = 1080, end_pause = 20, rewind = FALSE, renderer = gifski_renderer(loop = FALSE))

anim_save("Images/Intro/document_trend.gif", animation = rendered)

```

::: {.absolute top="12%" .fragment .fade-in fragment-index="3"}
Coastal Remote Sensing: A trendy topic !
:::

::: {.absolute .fragment .fade-in fragment-index="3" top="18%"}

![](Images/Intro/document_trend.gif){height="650"}
:::

::: {.absolute top="5%" left="50%" .fragment .fade-in fragment-index="4"}
![](Images/Intro/Pereira2013.png){height="300"}
:::

::: {.absolute top="70%" .fragment .fade-in fragment-index="4"}
 - Standardized measurements or indicators to monitor biodiversity
:::

::: {.absolute top="80%" .fragment .fade-in fragment-index="5" style="font-size: 60px;"}
 - Adapted for remote sensing applications
:::

::: {.absolute top="28%" right="0%" .fragment .fade-in fragment-index="5"}
![](Images/Intro/MullerKarger.png){width="1300"}
:::

::: {.absolute top="55%" right="8%" .fragment .fade-in fragment-index="5"}
![](Images/Intro/muller_slide4.png){width="900"}
:::




## Objectives of this work {data-background-image="Images/Intro/background_obj.png"}

::: {style="text-align: center; position: absolute; left: 50%; top: 20%; width:2300px; transform: translate(-50%, -50%)"}
[Show how remote sensing can effectively map intertidal habitats and assess environmental pressures]{style="font-size: 80px"}
:::

::: {.fragment .fade-in fragment-index="1" style="text-align: center; position: absolute; left: 50%; top: 40%; width:2300px; transform: translate(-50%, -50%)"}
[Analyzing the potential of multispectral sensors to distinguish macrophytes in soft-bottom intertidal zones at low tide]{style="font-size: 60px"}
:::

::: {.fragment .fade-in fragment-index="2" style="text-align: center; position: absolute; left: 50%; top: 60%; width:2300px; transform: translate(-50%, -50%)"}
[Building an algorithm that discriminates the most common taxonomic classes of vegetation found on soft bottom intertidal sediment]{style="font-size: 60px"}
:::

::: {.fragment .fade-in fragment-index="3" style="text-align: center; position: absolute; left: 50%; top: 80%; width:2300px; transform: translate(-50%, -50%)"}
[Investigate the capacity of remote sensing to monitor intertidal vegetation under abiotic and biotic pressures]{style="font-size: 60px"}
:::



# Developing Advanced Methodologies for Intertidal Vegetation Monitoring {data-stack-name="Challenges and Solutions" background-image="Images/Part1/Background_First_slide.png" style="width: 1300px;"}

- From Field Spectroscopy to Remote Sensors
- Develpment of Drone Classification Algorithm

## Challenges to map intertidal vegetation

::: {.absolute top="6.5%"}
*Introduction to Spectroradiometry*
:::

```{r Fig STDvsRAW}
#| cache: true
#| echo: false
#| eval: false
#| warning: false

library(tidyverse)
library(gganimate)
library(Utilities.Package)

##### Zost 

Zos <- read.table("Data/Part1/hyperspectral_zoster.txt", header=F)

names(Zos) <- c("Wavelength", paste0("Zos_",2:ncol(Zos)-1))



Zos <- Zos %>% 
  pivot_longer(-Wavelength, names_to = "SpectraID", values_to = "Ref")

id_ranking <- Zos %>%
  dplyr::filter(Wavelength == 665) %>%
  arrange(Ref) %>%
  mutate(ID = row_number()) %>%
  select(SpectraID, ID) 

Zos <- Zos %>% 
  left_join(id_ranking, by = "SpectraID") %>% 
  group_by(SpectraID) %>% 
  mutate(Ref_STD = (Ref-min(Ref))/(max(Ref)-min(Ref))) %>% 
  pivot_longer(-c(Wavelength, ID ,SpectraID), names_to = "Metric", values_to = "values")%>%
  ungroup() %>% 
  mutate(Biomass = max(ID) - ID + 1) 

plot_std <- Zos  %>% 
  ggplot(aes(x = Wavelength, y = values, color = Biomass, group = ID)  ) +
  geom_line()+
  scale_color_viridis_c(
    name = "Biomass",
    option = "D",
    breaks = c(min(Zos$Biomass), max(Zos$Biomass)),
    labels = c("Low", "High")
  )+
  ylab("Standardised Reflectance")+
  xlab("Wavelength")+
  transition_states(Metric,
                    transition_length = 2,
                    state_length = 1,
                    wrap = FALSE)+ 
  view_follow()+
  theme_Bede()+
  theme(legend.position = c(0.2,0.7),
        axis.title = element_text(face = "bold")
        )

rendered <- animate(plot_std, duration = 4, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 20, rewind = F, renderer = gifski_renderer(loop = F))

anim_save("Images/Part1/Fig_STD.gif", animation = rendered)

plot <- Zos  %>% 
  dplyr::filter(Metric == "Ref") %>% 
  ggplot() +
  geom_line(aes(x = Wavelength, y = values, color = Biomass, group = ID)  )+
  scale_color_viridis_c(
    name = "Biomass",
    option = "D",
    breaks = c(min(Zos$Biomass), max(Zos$Biomass)),
    labels = c("Low", "High")
  )+
  ylab("Refletance")+
  xlab("Wavelength")+
  theme_Bede()+
  theme(legend.position = c(0.2,0.8),
        axis.title = element_text(face = "bold")
        )

ggsave("Images/Part1/Fig_STD_static.png", plot,width = 8, height = 6, units = "in", dpi = 300)



```


```{r plots for spectral presentation}
#| cache: true
#| echo: false
#| eval: false
#| warning: false

library(tidyverse)
library(signal)
library(Utilities.Package)
library(gganimate)

rhodo <- "Data/Part1/BELON_STD.csv" %>%
    read.csv() %>% 
    dplyr::filter(Letter == "C") %>% 
    group_by(Wavelength) %>% 
    reframe(Rhodophyceae = mean(mean_STD))


# Apply Savitzky-Golay smoothing
# Choose polynomial order and window size
sgolay_order <- 2
sgolay_window <- 11  # Must be odd and >= order + 2

# Make sure window size is not larger than number of rows
sgolay_window <- min(sgolay_window, nrow(rhodo))
if (sgolay_window %% 2 == 0) sgolay_window <- sgolay_window - 1  # Ensure it's odd

rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)


ggplot(rhodo)+
  geom_line(aes(x = Wavelength, y = Rhodophyceae))

log_func <- function(x) {
  0.7 + 0.3 * log(x / 400) / log(900 / 400)
}

speclib <- "Data/Part1/spec_lib.csv" %>% 
    read.csv() %>% 
    select(-c(X,OSM,Bare.Sediment,Xanthophyceae)) %>% 
    left_join(rhodo, by = "Wavelength") %>%
    pivot_longer(-Wavelength, names_to = "Class",values_to = "Ref")  %>% 
    mutate(Class = case_when(Class == "Magnoliosida" ~ "C - Magnoliopsida",
                             Class == "Ulvophyceae" ~ "B - Chlorophyceae",
                             Class == "Rhodophyceae" ~ "E - Florideophyceae",
                             Class == "Bacillariophyceae" ~ "D - Bacillariophyceae",
                             Class == "Phaeophyceae" ~ "A - Phaeophyceae",
                             TRUE ~ Class)) %>% 
    group_by(Class) %>% 
    reframe(Wavelength = Wavelength,
            Ref = (Ref-min(Ref))/(max(Ref)-min(Ref))) %>% 
  mutate(Ref = case_when(Class == "B - Chlorophyceae" ~ log_func(Wavelength)*Ref,
                         T ~ Ref))
    
speclib$Class <- factor(speclib$Class, levels = c(
  "A - Phaeophyceae",
  "B - Chlorophyceae",
  "C - Magnoliopsida",
  "D - Bacillariophyceae",
  "E - Florideophyceae"
))

colscale <- c("D - Bacillariophyceae" = "#DAA520", 
              "B - Chlorophyceae" = "#b3ff1a", 
              "C - Magnoliopsida" = "#389318", 
              "A - Phaeophyceae" = "#873e23", 
              "E - Florideophyceae" = "#b3002d")



#### default plot

(init_plot <- speclib %>% 
  # dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida")) %>% 
  ggplot()+
    # geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
    geom_line(aes(x = Wavelength, y = Ref, color = Class, group = Class), linewidth = 1.5)+

    scale_color_manual(values=colscale)+
    theme_Bede()+
  ylab("Standardised Reflectance") +
  xlab("Wavelength (nm)") +
  theme(
    legend.position = c(0.15, 0.8),
    legend.text = element_text(size = 12),
    legend.text.align = 0,
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12)
  )
)

ggsave("Images/Part1/Figure_Hyperspectral.png", init_plot, width = 8, height = 6)

#### Zooming animation


# Step 1: create a variable for the animation state (frame)
# Let's assume `speclib` has a Wavelength range larger than 400-680
n_frames <- 20

# Séquence de zooms (xmax diminue vers 680)
xmax_seq <- seq(from = max(speclib$Wavelength), to = 665, length.out = n_frames)
xmin_seq <- seq(from = min(speclib$Wavelength), to = 450, length.out = n_frames)  # xmin reste constant

# Générer les données avec les limites x intégrées
animated_data <- lapply(1:n_frames, function(i) {
  speclib %>%
    mutate(frame = i,
           x_min = xmin_seq[i],
           x_max = xmax_seq[i])
}) %>% bind_rows()

p <- ggplot(animated_data) +
  geom_line(aes(x = Wavelength, y = Ref, color = Class, group = Class), linewidth = 1.5) +
  scale_color_manual(values = colscale) +
  theme_Bede() +
  ylab("Standardised Reflectance") +
  xlab("Wavelength (nm)") +
  theme(
    legend.position = c(0.15, 0.8),
    legend.text = element_text(size = 12),
    legend.text.align = 0,

    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12)
  ) +
  transition_manual(frame, parameters = list(x_min = animated_data$x_min, x_max = animated_data$x_max)) +
  ease_aes('cubic-in-out')+
  coord_cartesian(xlim = c(400, 900))  # valeur initiale temporaire


frames <- unique(animated_data$frame)


list.files("Data/Part1/temp_frames/", full.names = T) %>% 
  file.remove()

# Create and save plots
for (f in seq_len(n_frames)) {
  x_max <- xmax_seq[f]
  x_min <- xmin_seq[f]
  df <- dplyr::filter(speclib, Wavelength >= x_min, Wavelength <= x_max)
  
  p <- ggplot(df) +
    geom_line(aes(x = Wavelength, y = Ref, color = Class, group = Class), linewidth = 1.5) +
    scale_color_manual(values = colscale) +
    theme_Bede() +
    ylab("Standardised Reflectance") +
    xlab("Wavelength (nm)") +
    coord_cartesian(xlim = c(x_min, x_max)) +
    # ggtitle(paste("Zoom jusqu’à", round(x_max), "nm")) +
    theme(
      legend.position = c(0.15, 0.8),
      legend.text = element_text(size = 12),
      legend.text.align = 0,
      axis.text.x = element_text(size = 12),
      axis.text.y = element_text(size = 12)
    )
  
  ggsave(sprintf("Data/Part1/temp_frames/frame_%03d.png", f), p, width = 8, height = 6)
}

# Create animation from saved frames
imgs <- list.files("Data/Part1/temp_frames", full.names = TRUE, pattern = "*.png")
img_list <- magick::image_read(imgs)
animation <- magick::image_animate(magick::image_join(img_list), fps = 100,  loop = 1, optimize = T)

# Preview
# print(animation)

magick::image_write(animation, "Images/Part1/x_axis_zoom.gif", quality = 100)


#### Faded and animate

fade_class <- speclib %>% 
  dplyr::filter(!Class %in% c("Chlorophyceae", "Magnoliopsida"),
                Wavelength >= 450, 
                Wavelength <= 665 ) %>% 
  rename(Class1 = "Class")


faded <- speclib %>% 
  dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida"),
                Wavelength >= 450, 
                Wavelength <= 665) %>% 
  ggplot()+
    geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
    geom_line(aes(x = Wavelength, y = Ref, color = Class, group = 1L), linewidth = 1.5)+

    scale_color_manual(values=colscale)+
    theme_Bede()+
    ylab("Standardised Reflectance")+
    xlab("Wavelength (nm)")+
    theme(legend.position = c(0.15, 0.8),
          legend.text = element_text(size = 12),
          axis.text.x = element_text(size = 12),
          axis.text.y = element_text(size = 12))+
    coord_cartesian(xlim = c(450, 665)) +
    # ggtitle(paste("Zoom jusqu’à", round(x_max), "nm")) +
    theme(
      legend.position = c(0.15, 0.8),
      legend.text = element_text(size = 12),
      axis.text.x = element_text(size = 12),
      axis.text.y = element_text(size = 12)
    )+ 
  transition_states(Class,
                    transition_length = 2,
                    state_length = 1)

rendered <- animate(faded, duration = 2, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))

anim_save("Images/Part1/Figure_Hyperspectral_Faded.gif", animation = rendered)

# ggsave("Images/Part1/Figure_Hyperspectral_Faded.png", faded, width = 8, height = 6)
```

::: {.fragment .fade-out fragment-index="3"}
::: {.absolute bottom="0%" left="4%" .fragment .fade-in fragment-index="1"}
![](Images/Part1/SPC_gradient.png){height="233"}
:::
:::

::: {.absolute top="10%" right="0%" .fragment .fade-out fragment-index="1"}
![](Images/Part1/FigLightPath.png){height="900"}
:::

::: {.absolute top="10%" right="0%" .fragment .fade-in-then-out fragment-index="1"}
![](Images/Part1/FigLightPath2.png){height="900"}
:::

:::{.absolute bottom="5%" right="33%" .fragment .fade-in-then-out fragment-index="1"}

$$R(\lambda) = \frac{L_{\text{up}}(\lambda)}{L_{\text{down}}(\lambda)}$$

:::

:::{.absolute bottom="2%" right="0%" .fragment .fade-in-then-out fragment-index="1"}
- $\lambda$ is the Wavelenght
- $L_{\text{up}}$ is the upwelling radiance
- $L_{\text{down}}$ is the downwelling radiance
:::

::: {.absolute top="10%" left="0%" .fragment .fade-in-then-out fragment-index="1"}
![](Images/Part1/Fig_STD_static.png){height="900"}
:::

::: {.absolute top="10%" left="0%" .fragment .fade-in-then-out fragment-index="2"}
![](Images/Part1/Fig_STD.gif){height="900"}
:::

:::{.absolute top="30%" left="60%" .fragment .fade-in-then-out fragment-index="2"}

$$R_i^*(\lambda) = \frac{R_i(\lambda) - \min(R_i)}{\max(R_i) - \min(R_i)}$$

:::

:::{.absolute top="55%" left="52%" .fragment .fade-in-then-out fragment-index="2"}
- $R_i(\lambda)$ is the reflectance the the wavelength $\lambda$ of the spectrum $R_i$ 
- $min(R_i)$ and $max(R_i)$ are the minimum and maxium reflectance of the spectrum $R_i$
:::

:::{.absolute top="80%" left="52%" .fragment .fade-in-then-out fragment-index="2"}
- Each spectrum is between 0 and 1
:::

::: {.absolute top="10%" left="0%" .fragment .fade-in-then-out fragment-index="3"}
![](Images/Part1/Figure_Hyperspectral.png){height="1000"}
:::
::: {.fragment .fade-out fragment-index="5"}
::: {.absolute top="10%" right="0%" .fragment .fade-in fragment-index="3"}
![](Images/Part1/Figs_vegetations_2.png){width="1100"}
:::

::: {.absolute bottom="0%" right="0%" .fragment .fade-in fragment-index="3"}
![](Images/Part1/Figure13.png){width="1100"}
:::
:::

::: {.absolute bottom="0%" right="0%" .fragment .fade-in-then-out fragment-index="5"}
![](Images/Part1/Figure13_Florideo.png){width="1100"}
:::

::: {.absolute top="10%" right="0%" .fragment .fade-in-then-out fragment-index="5"}
![](Images/Part1/Figs_vegetations_2_Florideo.png){width="1100"}
:::

::: {.absolute top="10%" right="0%" .fragment .fade-in-then-out fragment-index="6"}
![](Images/Part1/Figs_vegetations_2_Bacillario.png){width="1100"}
:::

::: {.fragment .fade-out fragment-index="8"}

::: {.absolute top="10%" right="0%" .fragment .fade-in-then-out fragment-index="7"}
![](Images/Part1/Figs_vegetations_2_Green.png){width="1100"}
:::
:::

::: {.absolute bottom="0%" right="0%" .fragment .fade-in-then-out fragment-index="6"}
![](Images/Part1/Figure13_Bacillario.png){width="1100"}
:::

::: {.fragment .fade-out fragment-index="8"}

::: {.absolute bottom="0%" right="0%" .fragment .fade-in-then-out fragment-index="7"}
![](Images/Part1/Figure13_Green.png){width="1100"}
:::
:::

::: {.absolute top="10%" left="0%" .fragment .fade-in-then-out fragment-index="4"}
![](Images/Part1/x_axis_zoom.gif){height="1000"}
:::

::: {.absolute top="10%" left="0%" .fragment .fade-in-then-out fragment-index="5"}
![](Images/Part1/x_axis_zoom_Florideo.png){height="1000"}
:::

::: {.absolute top="10%" left="0%" .fragment .fade-in-then-out fragment-index="6"}
![](Images/Part1/x_axis_zoom_Bacillario.png){height="1000"}
:::

::: {.fragment .fade-out fragment-index="8"}
::: {.absolute top="10%" left="0%" .fragment .fade-in fragment-index="7"}
![](Images/Part1/Figure_Hyperspectral_Faded.gif){height="1000"}
:::
:::


```{r Spectra resampling}
#| echo: false
#| eval: false
#| warning: false

library(tidyverse)
library(signal)
library(Utilities.Package)
library(gganimate)

rhodo <- "Data/Part1/BELON_STD.csv" %>%
    read.csv() %>% 
    dplyr::filter(Letter == "C") %>% 
    group_by(Wavelength) %>% 
    reframe(Rhodophyceae = mean(mean_STD))


# Apply Savitzky-Golay smoothing
# Choose polynomial order and window size
sgolay_order <- 2
sgolay_window <- 11  # Must be odd and >= order + 2

# Make sure window size is not larger than number of rows
sgolay_window <- min(sgolay_window, nrow(rhodo))
if (sgolay_window %% 2 == 0) sgolay_window <- sgolay_window - 1  # Ensure it's odd

rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)
rhodo$Rhodophyceae <- sgolayfilt(rhodo$Rhodophyceae, p = sgolay_order, n = sgolay_window)


ggplot(rhodo)+
  geom_line(aes(x = Wavelength, y = Rhodophyceae))

log_func <- function(x) {
  0.7 + 0.3 * log(x / 400) / log(900 / 400)
}

speclib <- "Data/Part1/spec_lib.csv" %>% 
    read.csv() %>% 
    select(-c(X,OSM,Bare.Sediment,Xanthophyceae)) %>% 
    left_join(rhodo, by = "Wavelength") %>%
    pivot_longer(-Wavelength, names_to = "Class",values_to = "Ref")  %>% 
    mutate(Class = case_when(Class == "Magnoliosida" ~ "C - Magnoliopsida",
                             Class == "Ulvophyceae" ~ "B - Chlorophyceae",
                             Class == "Rhodophyceae" ~ "E - Florideophyceae",
                             Class == "Bacillariophyceae" ~ "D - Bacillariophyceae",
                             Class == "Phaeophyceae" ~ "A - Phaeophyceae",
                             TRUE ~ Class)) %>% 
    group_by(Class) %>% 
    reframe(Wavelength = Wavelength,
            Ref = (Ref-min(Ref))/(max(Ref)-min(Ref))) %>% 
  mutate(Ref = case_when(Class == "B - Chlorophyceae" ~ log_func(Wavelength)*Ref,
                         T ~ Ref))
    
speclib$Class <- factor(speclib$Class, levels = c(
  "A - Phaeophyceae",
  "B - Chlorophyceae",
  "C - Magnoliopsida",
  "D - Bacillariophyceae",
  "E - Florideophyceae"
))

colscale <- c("D - Bacillariophyceae" = "#DAA520", 
              "B - Chlorophyceae" = "#b3ff1a", 
              "C - Magnoliopsida" = "#389318", 
              "A - Phaeophyceae" = "#873e23", 
              "E - Florideophyceae" = "#b3002d")



#### default plot

(init_plot <- speclib %>% 
  # dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida")) %>% 
  ggplot()+
    # geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
    geom_line(aes(x = Wavelength, y = Ref, color = Class, group = Class), linewidth = 1.5)+

    scale_color_manual(values=colscale)+
    theme_Bede()+
  ylab("Standardised Reflectance") +
  xlab("Wavelength (nm)")  +
    xlim(c(400,900))+
  theme(
    legend.position = c(0.15, 0.8),
    legend.text = element_text(size = 12),
    legend.text.align = 0,
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12)
  )
)


####### PRISMA 
RSF_Prisma <-readxl::read_excel("Data/Part1/prisma_SRF.xlsx") %>% 
  as_tibble() %>% 
  pivot_longer(-Wavelength, names_to = "Bands", values_to = "SRF") %>% 
  mutate(SRF = as.numeric(SRF))

Prisma_Band_Max <- RSF_Prisma %>% 
  group_by(Bands) %>% 
  dplyr::filter(SRF == max(SRF))

for (i in unique(RSF_Prisma$Bands)) {
  
  band_i <- RSF_Prisma %>% 
    dplyr::filter(Bands == i) %>% 
    dplyr::select(-Bands)
  
  Joined_lib_SRF <- speclib %>% 
    left_join(band_i, by = "Wavelength")
  
  Ref_Prisma_band_i <- Joined_lib_SRF %>% 
    group_by(Class) %>% 
    reframe(Ref = weighted.mean(Ref,SRF)) %>% 
    mutate(Wavelength = Prisma_Band_Max %>% dplyr::filter(Bands == i) %>% pull(Wavelength))
  
  if(i == "Band 1"){
    Ref_Prisma = Ref_Prisma_band_i
  }else{
    Ref_Prisma = rbind(Ref_Prisma,Ref_Prisma_band_i)
  }
}

Ref_Prisma <- Ref_Prisma %>% 
  dplyr::filter(Wavelength > 400, 
                Wavelength < 900) %>% 
  group_by(Class) %>% 
  mutate(Ref = (Ref-min(Ref))/(max(Ref)-min(Ref)),
         Sensor = "Prisma")



(init_plot_PRISMA <- Ref_Prisma %>% 
  # dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida")) %>% 
  ggplot()+
    # geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
    geom_line(aes(x = Wavelength, y = Ref, color = Class, group = Class), linewidth = 1.5)+

    scale_color_manual(values=colscale)+
    theme_Bede()+
  ylab("Standardised Reflectance") +
  xlab("Wavelength (nm)") +
    xlim(c(400,900))+
  theme(
    legend.position = c(0.15, 0.8),
    legend.text = element_text(size = 12),
    legend.text.align = 0,
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12)
  )
)


### Sentinel-2

RSF_S2 <-readxl::read_excel("Data/Part1/S2_SRF.xlsx") %>% 
  as_tibble() %>% 
  pivot_longer(-Wavelength, names_to = "Bands", values_to = "SRF") %>% 
  mutate(SRF = as.numeric(SRF),
         Bands = gsub(".*_","",Bands))

S2_Band_Max <- data.frame(Bands = unique(RSF_S2$Bands),
                          Wavelength = c(443,490,560,665,705,740,783,742,865,945,1375,1610,2190))

for (i in unique(RSF_S2$Bands)) {
  
  band_i <- RSF_S2 %>% 
    dplyr::filter(Bands == i) %>% 
    dplyr::select(-Bands)
  
  Joined_lib_SRF <- speclib %>% 
    left_join(band_i, by = "Wavelength")
  
  Ref_S2_band_i <- Joined_lib_SRF %>% 
    group_by(Class) %>% 
    reframe(Ref = weighted.mean(Ref,SRF)) %>% 
    mutate(Wavelength = S2_Band_Max %>% dplyr::filter(Bands == i) %>% pull(Wavelength))
  
  if(i == "B1"){
    Ref_S2 = Ref_S2_band_i
  }else{
    Ref_S2 = rbind(Ref_S2,Ref_S2_band_i)
  }
}

Ref_S2 <- Ref_S2 %>% 
  dplyr::filter(Wavelength > 400, 
                Wavelength < 900) %>% 
  group_by(Class) %>% 
  mutate(Ref = (Ref-min(Ref))/(max(Ref)-min(Ref)),
         Sensor = "Sentinel-2")%>% 
   dplyr::filter(Wavelength != 742)
  

unique(Ref_S2$Wavelength)

(init_plot_S2 <- Ref_S2  %>% 
  # dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida")) %>% 
  ggplot()+
    # geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
    geom_line(aes(x = Wavelength, y = Ref, color = Class, group = Class), linewidth = 1.5)+

    scale_color_manual(values=colscale)+
    theme_Bede()+
  ylab("Standardised Reflectance") +
  xlab("Wavelength (nm)") +
    xlim(c(400,900))+
  theme(
    legend.position = c(0.15, 0.8),
    legend.text = element_text(size = 12),
    legend.text.align = 0,
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12)
  )
)


########### Pleiades

 df <-read.table("Data/Part1/pleiades_a_SRF.txt")
 
 names(df)<- c("Wavelength", paste0("B", 1:4))
 
 RSF_Pleiades<- df %>% 
  as_tibble() %>% 
   mutate(Wavelength = Wavelength *1000)
 
 new_wavelengths <- seq(min(RSF_Pleiades$Wavelength), max(RSF_Pleiades$Wavelength), by = 1)

 
 interpolated_df <- tibble(Wavelength = new_wavelengths)

 for (i in 2:ncol(RSF_Pleiades)) {
  col_name <- paste0("B", i-1)
  interpolated_df[[col_name]] <- approx(RSF_Pleiades$Wavelength, RSF_Pleiades[[col_name]], xout = new_wavelengths, rule = 2)$y
}
 
 
 RSF_Pleiades <- interpolated_df %>% 
  pivot_longer(-Wavelength, names_to = "Bands", values_to = "SRF") %>% 
  mutate(SRF = as.numeric(SRF),
         Bands = gsub(".*_","",Bands), 
         Wavelength = as.numeric(Wavelength))

Pleiades_Band_Max <- data.frame(Bands = unique(RSF_Pleiades$Bands),
                          Wavelength = c(mean(c(550,430)), mean(c(610,490)),mean(c(720,600)), mean(c(950,750))))

for (i in unique(RSF_Pleiades$Bands)) {
  
  band_i <- RSF_Pleiades %>% 
    dplyr::filter(Bands == i) %>% 
    dplyr::select(-Bands)
  
  Joined_lib_SRF <- speclib %>% 
    left_join(band_i, by = "Wavelength") %>% 
    mutate(SRF = case_when(is.na(SRF) ~ 0,
                           T ~SRF ))
  
  Ref_Pleiades_band_i <- Joined_lib_SRF %>% 
    group_by(Class) %>% 
    reframe(Ref = weighted.mean(Ref,SRF)) %>% 
    mutate(Wavelength = Pleiades_Band_Max %>% dplyr::filter(Bands == i) %>% pull(Wavelength))
  
  if(i == "B1"){
    Ref_Pleiades = Ref_Pleiades_band_i
  }else{
    Ref_Pleiades = rbind(Ref_Pleiades,Ref_Pleiades_band_i)
  }
}

Ref_Pleiades <- Ref_Pleiades %>% 
  dplyr::filter(Wavelength > 400, 
                Wavelength < 900) %>% 
  group_by(Class) %>% 
  mutate(Ref = (Ref-min(Ref))/(max(Ref)-min(Ref)),
         Sensor = "Pleiades")
  



(init_plot_Pleiades <- Ref_Pleiades %>% 
   # dplyr::filter(Wavelength != 742) %>% 
  # dplyr::filter(Class %in% c("Chlorophyceae", "Magnoliopsida")) %>% 
  ggplot()+
    # geom_line(data = fade_class, mapping = aes(x = Wavelength, y = Ref, group = Class1), color = "grey", alpha = 0.2, linewidth = 1.5)+
    geom_line(aes(x = Wavelength, y = Ref, color = Class, group = Class), linewidth = 1.5)+

    scale_color_manual(values=colscale)+
    theme_Bede()+
  ylab("Standardised Reflectance") +
  xlab("Wavelength (nm)") +
    xlim(c(400,900))+
  theme(
    legend.position = c(0.15, 0.8),
    legend.text = element_text(size = 12),
    legend.text.align = 0,
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12)
  )
)

##### ALL

speclib_Resampled <-  speclib %>% 
  mutate(Sensor = "ASD") %>% 
  rbind(Ref_Prisma, Ref_S2, Ref_Pleiades) %>% 
  mutate(y = case_when(Sensor == "ASD" ~ 0,
                       Sensor == "Prisma" ~ 0.05,
                       Sensor == "Sentinel-2" ~ 0.1,
                       Sensor == "Pleiades" ~ 0.15))


unique(speclib_Resampled$Sensor)

speclib_Resampled$Sensor <- factor(speclib_Resampled$Sensor, levels = c(
  "ASD",
  "Prisma",
  "Sentinel-2",
  "Pleiades"
))


Plot_animated_resampled <- speclib_Resampled %>% 
  mutate(Sensor_fading = Sensor) %>% 
  ggplot(aes(x = Wavelength, y = Ref, color = Class, group = Class)) +

    # Smooth transitioning spectra
    geom_line(
      linewidth = 1.5
    ) +

    # Text that only fades in/out
    geom_text(
      aes(x = 800, y = 0.05, label = Sensor, group = Sensor_fading),
      size = 10,
      inherit.aes = FALSE
    ) +

    # Small ticks at each Wavelength (bottom side only)
    geom_rug(
      aes(x = Wavelength, group = Sensor),
      sides = "b",           # bottom only
      color = "red",
      length = unit(6, "pt"),
      linewidth = 1 # short tick
    ) +

    # Color scale and labels
    scale_color_manual(values = colscale) +
    ylab("Standardised Reflectance") +
    xlab("Wavelength (nm)") +
    xlim(c(400, 900)) +

    # Animate sensor changes globally
    transition_states(Sensor,
                      transition_length = 5,
                      state_length = 30) +
    ease_aes("sine-in-out") +

    # Theme and styling
    theme_Bede() +
    theme(
      legend.position = c(0.15, 0.8),
      legend.text = element_text(size = 12),
      legend.text.align = 0,
      axis.text.x = element_text(size = 12),
      axis.text.y = element_text(size = 12)
    )

rendered <- animate(Plot_animated_resampled, duration = 5, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))

anim_save("Images/Part1/Figure_SRF_all.gif", animation = rendered)



#### ZOOMED


Plot_animated_resampled_zoomed <- speclib_Resampled %>% 
  mutate(Sensor_fading = Sensor) %>% 
  dplyr::filter(Wavelength < 670) %>% 
  ggplot(aes(x = Wavelength, y = Ref, color = Class, group = Class)) +

    # Smooth transitioning spectra
    geom_line(
      linewidth = 1.5
    ) +

    # Text that only fades in/out
    geom_text(
      aes(x = 600, y = 0.9, label = Sensor, group = Sensor_fading),
      size = 10,
      inherit.aes = FALSE
    ) +

    # Small ticks at each Wavelength (bottom side only)
    geom_rug(
      aes(x = Wavelength, group = Sensor),
      sides = "b",           # bottom only
      color = "red",
      length = unit(6, "pt"),
      linewidth = 1 # short tick
    ) +

    # Color scale and labels
    scale_color_manual(values = colscale) +
    ylab("Standardised Reflectance") +
    xlab("Wavelength (nm)") +
    xlim(c(400, 670)) +

    # Animate sensor changes globally
    transition_states(Sensor,
                      transition_length = 5,
                      state_length = 30) +
    ease_aes("sine-in-out") +

    # Theme and styling
    theme_Bede() +
    theme(
      legend.position = c(0.15, 0.8),
      legend.text = element_text(size = 12),
      legend.text.align = 0,
      axis.text.x = element_text(size = 12),
      axis.text.y = element_text(size = 12)
    )

rendered_zoomed <- animate(Plot_animated_resampled_zoomed, duration = 5, fps = 20, width = 8, height = 6, units = "in", res = 300, end_pause = 1, rewind = F, renderer = gifski_renderer(loop = T))

anim_save("Images/Part1/Figure_SRF_all_zoomed.gif", animation = rendered_zoomed)

```

::: {.absolute top="15%" left="0%" .fragment .fade-in-then-out fragment-index="8"}
![](Images/Part1/Figure_SRF_all_ASD.png){height="1000"}
:::

::: {.absolute top="15%" right="15%" .fragment .fade-in-then-out fragment-index="8"}
![](Images/Part1/ASD_show.jpeg){height="1000"}
:::

:::{.absolute top="15%" right="3%" .fragment .fade-in-then-out fragment-index="8" style="width: 300px; text-align: left;  font-size: 60px;"}
ASD FieldSpec Handheld 2
:::

:::{.absolute top="45%" right="3%" .fragment .fade-in-then-out fragment-index="8" style="width: 300px; text-align: left;  font-size: 60px;"}
Hyperspectral Sensor
:::

:::{.absolute bottom="8%" right="3%" .fragment .fade-in-then-out fragment-index="8" style="width: 300px; text-align: left;  font-size: 60px;"}
A lot of Narrow Spectral Bands
:::

::: {.absolute top="15%" left="0%" .fragment .fade-in-then-out fragment-index="9"}
![](Images/Part1/Figure_SRF_all.gif){height="1000"}
:::

::: {.absolute top="15%" left="0%" .fragment .fade-in fragment-index="10"}
![](Images/Part1/Figure_SRF_all_zoomed.gif){height="1000"}
:::

::: {.fragment .fade-out fragment-index="11"}
::: {.absolute top="15%" right="0%" .fragment .fade-in fragment-index="9"}
![](Images/Part1/Fig_SpectralResolution.png){height="1000"}
:::
:::

:::{.absolute top="20%" left="55%" .fragment .fade-in fragment-index="11" style="width: 1200px; text-align: left;  font-size: 80px;"}
- Is is possible to descriminate **green macrophytes** using remote sensing techniques ? 

:::

:::{.absolute bottom="15%" left="55%" .fragment .fade-in fragment-index="11" style="width: 1200px; text-align: left;  font-size: 80px;"}
- What is the impact of the **spectral resolution** on the descrimination accuraty ?
:::

## Material & Methods

```{r Map Spectral library}
#| echo: false
#| eval: false
#| warning: false

library(sf)

land_mask <- read_sf("Data/Part1/Maks_land_SPain_Portugal_France.shp")

Sampling_points <- tibble(
  Country = c("France", "France","France","France", "France","France", "Portugal", "Portugal"),
  Site = c("Mont Saint Michel Bay","Auray Estuary", "Morbihan Gulf","Traict of Merquel", "Bourgneuf Bay", "Marennes-Oléron Bay"),
  x = c( -1.616884,-2.956158,  -2.811063, -2.464984, -2.108862, -1.147721),
  y = c(48.661632,47.627424,47.580383, 47.418887,47.008546,45.926925)) %>% 
  st_as_sf(coords = c("x", "y"), crs = 4326)

plot(Sampling_points)

ggplot()+
  geom_sf(data = land_mask)+
  geom_sf(data = Sampling_points)

```




# Case Study 1 – Facing Biological Invasions {data-name="Invasive species"}

- Introduction of the problem (Gracilaria, aquaculture, why studying it ? )
- Mapping the algae, over space and time, with key factor influencing its distribution
- Implication for Management

# Case Study 2 – Mapping the impact of Heatwaves on intertidal seagrasses {data-name="Marine Heatwaves"}

- Introduction (Seagrasses quickly, heatwaves mainly)
- Experiment
- Satellite observation
- Ecological consequences

# Discussion and Overview {data-name="Discussion"}

- Duality Drone and Satellite (Strength, weaknesses, complementary of methods)
- Remote sensing for coastal ecosystem Management
- Future direction (RS for aquaculture, penology, restoration...)
